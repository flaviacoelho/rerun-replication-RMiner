[{
    "id": 1100435,
    "repository": "https://github.com/realm/realm-java.git",
    "sha1": "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "url": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "author": "Christian Melchior",
    "time": "6/8/15 7:26 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private showStatus(txt String) : void extracted from protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "comment": "The method showStatus(txt String) is added in the refactored version and indeed is called inside onCreate(..) but there ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1250
}, {
    "id": 1100663,
    "repository": "https://github.com/rstudio/rstudio.git",
    "sha1": "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
    "url": "https://github.com/rstudio/rstudio/commit/cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
    "author": "JJ Allaire",
    "time": "6/8/15 9:53 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2603
}, {
    "id": 1100842,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
    "url": "https://github.com/JetBrains/intellij-community/commit/7ed3f273ab0caf0337c22f0b721d51829bb0c877",
    "author": "Ekaterina Tuzova",
    "time": "6/8/15 10:29 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 27567
}, {
    "id": 1100856,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7a4dab88185553bd09e827839fdf52e870ef7088",
    "url": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "author": "Dmitry Batrak",
    "time": "6/8/15 8:07 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 28911
}, {
    "id": 1100868,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7655200f58293e5a30bf8b3cbb29ebadae374564",
    "url": "https://github.com/JetBrains/intellij-community/commit/7655200f58293e5a30bf8b3cbb29ebadae374564",
    "author": "Egor.Ushakov",
    "time": "6/8/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private checkRemap() : void extracted from public getLine() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private checkRemap() : void extracted from public getOffset() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 37410
}, {
    "id": 1101296,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "4a2247c24efee48de53ca07302b6810ab7205621",
    "url": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "author": "Teryk Bellahsene",
    "time": "6/8/15 11:12 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.sonar.server.custommeasure to org.sonar.server.measure.custom",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDao moved to org.sonar.server.measure.custom.persistence.CustomMeasureDao",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDaoTest moved to org.sonar.server.measure.custom.persistence.CustomMeasureDaoTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureTesting moved to org.sonar.server.measure.custom.persistence.CustomMeasureTesting",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWs moved to org.sonar.server.measure.custom.ws.CustomMeasuresWs",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsAction moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsAction",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModule moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModule",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModuleTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModuleTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.DeleteAction moved to org.sonar.server.measure.custom.ws.DeleteAction",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.DeleteActionTest moved to org.sonar.server.measure.custom.ws.DeleteActionTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3691
}, {
    "id": 1101310,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "abbf32571232db81a5343db17a933a9ce6923b44",
    "url": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "author": "Simon Brandhof",
    "time": "6/8/15 10:22 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.sonar.server.notifications to org.sonar.server.notification",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.DefaultNotificationManagerTest moved to org.sonar.server.notification.DefaultNotificationManagerTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationChannelTest moved to org.sonar.server.notification.NotificationChannelTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcher moved to org.sonar.server.notification.NotificationDispatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherMetadata moved to org.sonar.server.notification.NotificationDispatcherMetadata",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherMetadataTest moved to org.sonar.server.notification.NotificationDispatcherMetadataTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherTest moved to org.sonar.server.notification.NotificationDispatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationCenter moved to org.sonar.server.notification.NotificationCenter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationCenterTest moved to org.sonar.server.notification.NotificationCenterTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationService moved to org.sonar.server.notification.NotificationService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationServiceTest moved to org.sonar.server.notification.NotificationServiceTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationTest moved to org.sonar.server.notification.NotificationTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.AlertsEmailTemplate moved to org.sonar.server.notification.email.AlertsEmailTemplate",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.AlertsEmailTemplateTest moved to org.sonar.server.notification.email.AlertsEmailTemplateTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.EmailNotificationChannel moved to org.sonar.server.notification.email.EmailNotificationChannel",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.EmailNotificationChannelTest moved to org.sonar.server.notification.email.EmailNotificationChannelTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.DefaultNotificationManager moved to org.sonar.server.notification.DefaultNotificationManager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.sonar.server.notification.NotificationManager from class org.sonar.server.notification.DefaultNotificationManager",
        "comment": "NotificationManager existed in the previous revision too",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationManager moved to org.sonar.server.notification.NotificationManager",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 9294
}, {
    "id": 1102793,
    "repository": "https://github.com/crashub/crash.git",
    "sha1": "2801269c7e47bd6e243612654a74cee809d20959",
    "url": "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
    "author": "Oliver Trosien",
    "time": "6/7/15 11:15 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 417
}, {
    "id": 1102923,
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "sha1": "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "url": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "author": "Jeeeyul Lee",
    "time": "6/8/15 6:29 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.TestView moved to net.jeeeyul.eclipse.themes.test.e4app.views.TestView",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.SplashHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.SplashHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.AboutHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.AboutHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 313
}, {
    "id": 1103199,
    "repository": "https://github.com/oblac/jodd.git",
    "sha1": "722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "url": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "author": "Igor Spasi?",
    "time": "6/8/15 6:08 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1225
}, {
    "id": 1103658,
    "repository": "https://github.com/glyptodon/guacamole-client.git",
    "sha1": "ebb483320d971ff4d9e947309668f5da1fcd3d23",
    "url": "https://github.com/glyptodon/guacamole-client/commit/ebb483320d971ff4d9e947309668f5da1fcd3d23",
    "author": "Michael Jumper",
    "time": "6/8/15 5:46 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1103823,
    "repository": "https://github.com/raphw/byte-buddy.git",
    "sha1": "372f4ae6cebcd664e3b43cade356d1df233f6467",
    "url": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "author": "Rafael Winterhalter",
    "time": "6/8/15 12:07 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute package ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to class net.bytebuddy.description.type.TypeDescription",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner",
        "comment": "call to resolve() with three args in old vrs call to resolve() with two args in new",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "comment": "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
        "comment": "call to resolve() with three args in old vrs call to resolve() with two args in new",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private substitutionMatcher : ElementMatcher from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4590
}, {
    "id": 1103915,
    "repository": "https://github.com/Athou/commafeed.git",
    "sha1": "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
    "url": "https://github.com/Athou/commafeed/commit/18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
    "author": "Athou",
    "time": "6/8/15 10:53 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fetch(url String) : byte[] extracted from public fetch(feed Feed) : byte[] in class com.commafeed.backend.favicon.DefaultFaviconFetcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 256
}, {
    "id": 1103963,
    "repository": "https://github.com/fabric8io/fabric8.git",
    "sha1": "8127b21a220ca677c4e59961d019e7753da7ea6e",
    "url": "https://github.com/fabric8io/fabric8/commit/8127b21a220ca677c4e59961d019e7753da7ea6e",
    "author": "Jimmi Dyson",
    "time": "6/8/15 8:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getProbe(prefix String) : Probe extracted from protected getLivenessProbe() : Probe in class io.fabric8.maven.JsonMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 13059
}, {
    "id": 1104589,
    "repository": "https://github.com/puniverse/quasar.git",
    "sha1": "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "url": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "author": "pron",
    "time": "6/8/15 8:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void extracted from public subscribe(s Subscriber<? super T>) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 548
}, {
    "id": 1104637,
    "repository": "https://github.com/dreamhead/moco.git",
    "sha1": "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
    "url": "https://github.com/dreamhead/moco/commit/55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
    "author": "dreamhead",
    "time": "6/8/15 11:18 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 472
}, {
    "id": 1104750,
    "repository": "https://github.com/vaadin/vaadin.git",
    "sha1": "b0d5315e8ba95d099f93dc2d16339033a6525b59",
    "url": "https://github.com/vaadin/vaadin/commit/b0d5315e8ba95d099f93dc2d16339033a6525b59",
    "author": "Teppo Kurki",
    "time": "6/8/15 4:19 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private remove() : void inlined to public testColExpandRatioIsForgotten() : void in class com.vaadin.ui.GridLayoutExpandRatioTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3001
}, {
    "id": 1104952,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "04bcfe98dbe7b05e508559930c21379ece845732",
    "url": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "author": "Cedric Champeau",
    "time": "6/8/15 9:02 AM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.internal.component.model.ComponentArtifactIdentifier moved to org.gradle.api.artifacts.component.ComponentArtifactIdentifier",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method private assertHasResult() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasResult() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public eachResolvedProject(action Action) : void from class org.gradle.api.internal.artifacts.ResolverResults to public eachResolvedProject(action Action) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.ResolverResults to public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.ResolverResults to public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.ResolverResults to public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.ResolverResults to public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public hasError() : boolean from class org.gradle.api.internal.artifacts.ResolverResults to public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 9978
}, {
    "id": 1105075,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "2bcd05a827ead109a56cb1f79a83dcd332f42888",
    "url": "https://github.com/JetBrains/MPS/commit/2bcd05a827ead109a56cb1f79a83dcd332f42888",
    "author": "Mihail Muhin",
    "time": "6/7/15 7:36 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public getLanguage(id SLanguageId, langName String, version int) : SLanguage inlined to public getLanguage(id SLanguageId, langName String) : SLanguage in class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 43228
}, {
    "id": 1105586,
    "repository": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
    "sha1": "e235f884f2e0bc258da77b9c80492ad33386fa86",
    "url": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/commit/e235f884f2e0bc258da77b9c80492ad33386fa86",
    "author": "Marvin Arnold",
    "time": "6/7/15 9:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createCellSignalTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createOpenCellIDTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createDefaultMCCTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createLocationTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createSilentSmsTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCellTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createEventLogTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 463
}, {
    "id": 1105941,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
    "url": "https://github.com/JetBrains/intellij-community/commit/138911ce88b05039242b8d1b2bb5b7a59008f5ee",
    "author": "Dmitry Batrak",
    "time": "6/8/15 12:40 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit extracted from public getHTMLEditorKit() : HTMLEditorKit in class com.intellij.util.ui.UIUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15944
}, {
    "id": 1105947,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
    "url": "https://github.com/JetBrains/intellij-community/commit/04397f41107bd6de41b31d45a4e8e2ed65628bbe",
    "author": "Anna Kozlova",
    "time": "6/8/15 11:50 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 14649
}, {
    "id": 1105950,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "url": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "author": "Bas Leijdekkers",
    "time": "6/8/15 11:39 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15592
}, {
    "id": 1105969,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "url": "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "author": "Julien Lancelot",
    "time": "6/8/15 1:21 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106007,
    "repository": "https://github.com/glyptodon/guacamole-client.git",
    "sha1": "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
    "url": "https://github.com/glyptodon/guacamole-client/commit/ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
    "author": "Michael Jumper",
    "time": "6/8/15 2:17 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106044,
    "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
    "sha1": "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
    "url": "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
    "author": "Chris Kittrell",
    "time": "6/8/15 11:14 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private column : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106247,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "url": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "author": "olim7t",
    "time": "6/8/15 11:19 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106350,
    "repository": "https://github.com/puniverse/quasar.git",
    "sha1": "56d4b999e8be70be237049708f019c278c356e71",
    "url": "https://github.com/puniverse/quasar/commit/56d4b999e8be70be237049708f019c278c356e71",
    "author": "circlespainter",
    "time": "6/8/15 3:49 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public pushMethod(entry int, numSlots int, method String, sourceLine int) : void inlined to public pushMethod(entry int, numSlots int) : void in class co.paralleluniverse.fibers.Stack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public checkInstrumentation(exc boolean) : boolean inlined to public checkInstrumentation() : boolean in class co.paralleluniverse.fibers.Fiber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public popMethod(catchAll boolean) : void inlined to public popMethod() : void in class co.paralleluniverse.fibers.Stack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private isNonSuspendable(clazz Class, methodName String) : boolean renamed to private isSuspendable(clazz Class, methodName String) : boolean in class co.paralleluniverse.fibers.Fiber",
        "comment": "The method is name is changed since the functionality is changed | Davood: The method is called in (almost) the same place than the older one, I mark it as TP",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private emitInstrumentedAnn() : void extracted from public visitEnd() : void in class co.paralleluniverse.fibers.instrument.InstrumentClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 970
}, {
    "id": 1106355,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "url": "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "author": "Steve Ebersole",
    "time": "6/8/15 4:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6112
}, {
    "id": 1106365,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "446e2537895c15b404a74107069a12f3fc404b15",
    "url": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "author": "Philip Thompson",
    "time": "6/8/15 4:41 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.hadoop.BulkRecordWriter.NullOutputHandler moved to org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter.NullOutputHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat.SplitCallable moved to org.apache.cassandra.hadoop.cql3.CqlInputFormat.SplitCallable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getRangeMap(conf Configuration, keyspace String) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getRangeMap(conf Configuration, keyspace String) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private rangeToTokenRange(metadata Metadata, range Range) : TokenRange from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private rangeToTokenRange(metadata Metadata, range Range) : TokenRange from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSplits(context JobContext) : List from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(context JobContext) : List from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private partitioner : IPartitioner from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private session : Session from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCount to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCountSetup to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.BulkRecordWriter to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCountCounters to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
        "comment": "<p>The source class is deleted.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
        "comment": "<p>The source class is deleted.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "<p>The attribute logger is moved form the superclass of ColumnFamilyInputFormat (AbstractColumnFamilyInputFormat) to CqlInputFormat and it is already detected and marked as CTP.</p><p>&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1106365/141</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 6589
}, {
    "id": 1106576,
    "repository": "https://github.com/liferay/liferay-portal.git",
    "sha1": "59fd9e696cec5f2ed44c27422bbc426b11647321",
    "url": "https://github.com/liferay/liferay-portal/commit/59fd9e696cec5f2ed44c27422bbc426b11647321",
    "author": "Andrea Di Giorgi",
    "time": "6/10/15 6:43 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency extracted from public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency in class com.liferay.gradle.util.GradleUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String) : Dependency from class com.liferay.gradle.plugins.poshi.runner.util.GradleUtil to public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
        "comment": "class GradleUtil is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 10416
}, {
    "id": 1106945,
    "repository": "https://github.com/HubSpot/Singularity.git",
    "sha1": "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
    "url": "https://github.com/HubSpot/Singularity/commit/45ada13b852af85e1ae0491267a0239d9bdf6f3f",
    "author": "tpetr",
    "time": "6/10/15 4:07 PM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.DeployResource to class com.hubspot.singularity.resources.AbstractRequestResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.RequestResource to class com.hubspot.singularity.resources.AbstractRequestResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1107119,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
    "author": "Steve Kondik",
    "time": "6/11/15 12:41 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private cleanupProximityLocked() : void extracted from private cleanupProximity() : void in class com.android.server.power.PowerManagerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8657
}, {
    "id": 1107345,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "219d6ddfd1db62c11efb57e0216436874e087834",
    "url": "https://github.com/JetBrains/intellij-community/commit/219d6ddfd1db62c11efb57e0216436874e087834",
    "author": "Michael Golubev",
    "time": "6/10/15 4:04 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.intellij.remoteServer.agent.util.log.LogPipeBase from class com.intellij.remoteServer.agent.util.log.LogPipe",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void extracted from public addAdditionalLog(presentableName String) : LoggingHandler in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl to public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 14854
}, {
    "id": 1107379,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "484038e916dc40bf87eca10c77889d79eca96c4d",
    "url": "https://github.com/JetBrains/intellij-community/commit/484038e916dc40bf87eca10c77889d79eca96c4d",
    "author": "Eugene Zhuravlev",
    "time": "6/10/15 9:11 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public removeNodes(paths Collection<TreePath>) : void extracted from public removeNode(nodePath TreePath) : void in class com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16962
}, {
    "id": 1107713,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "url": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "author": "Julien Lancelot",
    "time": "6/10/15 9:30 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.sonar.core.component.SnapshotQuery moved to org.sonar.core.component.db.SnapshotQuery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.component.SnapshotQueryTest moved to org.sonar.core.component.db.SnapshotQueryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2491
}, {
    "id": 1107718,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "url": "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "author": "Julien Lancelot",
    "time": "6/10/15 9:30 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2975
}, {
    "id": 1107899,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "c928852d4ab7d8c744063979208709ed4429b8e9",
    "url": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "author": "Christoph Büscher",
    "time": "6/11/15 9:40 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3765
}, {
    "id": 1107905,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "f77804dad35c13d9ff96456e85737883cf7ddd99",
    "url": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "author": "Simon Willnauer",
    "time": "6/11/15 6:58 AM",
    "refactorings": [{
        "type": "Rename Method",
        "description": "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.ElasticsearchMergePolicy moved to org.elasticsearch.index.shard.ElasticsearchMergePolicy",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.FilterDocValuesProducer moved to org.elasticsearch.index.shard.FilterDocValuesProducer",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgrader moved to org.elasticsearch.index.shard.VersionFieldUpgrader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgraderTest moved to org.elasticsearch.index.shard.VersionFieldUpgraderTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider moved to org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMergePolicy() : LogByteSizeMergePolicy from class org.elasticsearch.index.merge.policy.LogByteSizeMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
        "comment": "LogByteSizeMergePolicyProvider is deleted, in class EngineConfig field mergePolicyProvider -> mergePolicy and thus the getter is renmed to  getMergePolicy ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMergePolicy() : LogDocMergePolicy from class org.elasticsearch.index.merge.policy.LogDocMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
        "comment": "<p>The method is a getter, the coresponding&nbsp;attribute has changed, so do the method signature.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider.ApplySettings to public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "<p>Matin: Second Opinion. The method is renamed since the return type is changed</p><p>Davood: There are three implementations of the same interface and the method is forced to be implemented in all the implementing classes. All the classes are deleted in this commit, and the newly-added class implements the same interface and the method is identical to one of the removed ones</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public build(value String) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
        "comment": "Second Opinion. It is a move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
        "comment": "The class in based version is deleted and the class in refactored version is added. Five methods in total are moved frome the deletd class, to the added class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Change Package",
        "description": "Rename Package org.elasticsearch.index.merge.policy to org.elasticsearch.index.shard",
        "comment": "null",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 8239
}, {
    "id": 1107917,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "url": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "author": "javanna",
    "time": "6/10/15 7:46 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 7383
}, {
    "id": 1108190,
    "repository": "https://github.com/kuujo/copycat.git",
    "sha1": "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
    "url": "https://github.com/kuujo/copycat/commit/19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
    "author": "Jordan Halterman",
    "time": "6/10/15 6:01 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.ActiveState to private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.ActiveState to private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected transition : boolean from class net.kuujo.copycat.raft.state.ActiveState to class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 858
}, {
    "id": 1108762,
    "repository": "https://github.com/raphw/byte-buddy.git",
    "sha1": "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
    "url": "https://github.com/raphw/byte-buddy/commit/f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
    "author": "Rafael Winterhalter",
    "time": "6/10/15 5:31 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.Explicit to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmMethod to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmConstructor to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1005
}, {
    "id": 1109077,
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "sha1": "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "url": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "author": "Cowtowncoder",
    "time": "6/10/15 8:33 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1439
}, {
    "id": 1109425,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
    "url": "https://github.com/Alluxio/alluxio/commit/6d10621465c0e6ae81ad8d240d70a55c72caeea6",
    "author": "Bin Fan",
    "time": "6/10/15 9:21 PM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase to class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1109449,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "0ba343846f21649e29ffc600f30a7f3e463fb24c",
    "url": "https://github.com/Alluxio/alluxio/commit/0ba343846f21649e29ffc600f30a7f3e463fb24c",
    "author": "Bin Fan",
    "time": "6/10/15 3:33 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110072,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "b40adc25008b6f608ee3eb3422c8884fff987337",
    "url": "https://github.com/orientechnologies/orientdb/commit/b40adc25008b6f608ee3eb3422c8884fff987337",
    "author": "lvca",
    "time": "6/15/15 7:43 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object extracted from public command(iCommand OCommandRequestText) : Object in class com.orientechnologies.orient.client.remote.OStorageRemote",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from private indexGet() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from protected command() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4630
}, {
    "id": 1110153,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
    "url": "https://github.com/VoltDB/voltdb/commit/e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
    "author": "wweiss",
    "time": "6/15/15 12:27 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void extracted from public setMpDRGateway(mpGateway PartitionDRGateway) : void in class org.voltdb.iv2.SpScheduler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110155,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "669e0722324965e3c99f29685517ac24d4ff2848",
    "url": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "author": "Manju James",
    "time": "6/15/15 10:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private allowPauseModeExecution(handler ClientInputHandler, procedure Procedure, invocation StoredProcedureInvocation) : boolean extracted from package handleRead(buf ByteBuffer, handler ClientInputHandler, ccxn Connection) : ClientResponseImpl in class org.voltdb.ClientInterface",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110240,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "url": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "author": "Kevin Gallardo",
    "time": "6/15/15 10:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package getPreparedQuery(type QueryType, columns Set<ColumnMapper<?>>, options Option[]) : PreparedStatement extracted from package getPreparedQuery(type QueryType, options Option[]) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110245,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "3a0603f8f778be3219a5a0f3a7845cda65f1e172",
    "url": "https://github.com/datastax/java-driver/commit/3a0603f8f778be3219a5a0f3a7845cda65f1e172",
    "author": "Alexandre Dutra",
    "time": "6/15/15 4:48 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public values(names List<String>, values List<Object>) : Insert extracted from public values(names String[], values Object[]) : Insert in class com.datastax.driver.core.querybuilder.Insert",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 518
}, {
    "id": 1110272,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
    "url": "https://github.com/JetBrains/intellij-community/commit/3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
    "author": "Yaroslav Lepenkin",
    "time": "6/15/15 9:02 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.psi.codeStyle.autodetect.NewLineBlocksIterator moved to com.intellij.psi.formatter.common.NewLineBlocksIterator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15855
}, {
    "id": 1110282,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
    "url": "https://github.com/JetBrains/intellij-community/commit/d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
    "author": "Vladimir Krivosheev",
    "time": "6/15/15 5:59 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public canonicalizePath(url String, baseUrl Url, baseUrlIsFile boolean) : String extracted from protected canonicalizeUrl(url String, baseUrl Url, trimFileScheme boolean, sourceIndex int, baseUrlIsFile boolean) : Url in class org.jetbrains.debugger.sourcemap.SourceResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15112
}, {
    "id": 1110287,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "url": "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "author": "Anna Kozlova",
    "time": "6/15/15 3:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15192
}, {
    "id": 1110654,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "url": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "author": "Sébastien Lesaint",
    "time": "6/15/15 8:07 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.sonar.server.computation.measure.Measure.QualityGateStatus moved to org.sonar.server.computation.measure.QualityGateStatus",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3190
}, {
    "id": 1111161,
    "repository": "https://github.com/undertow-io/undertow.git",
    "sha1": "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "url": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "author": "Stuart Douglas",
    "time": "6/15/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isOperator(op String) : boolean from class io.undertow.predicate.PredicateParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class io.undertow.util.PredicateTokeniser.Token moved to io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.HandlerParser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isSpecialChar(token String) : boolean from class io.undertow.predicate.PredicateParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.HandlerParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private precedence(operator String) : int from class io.undertow.server.handlers.builder.HandlerParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private precedence(operator String) : int from class io.undertow.predicate.PredicateParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleArrayValue(string String, builder Token, tokens Deque, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.util.PredicateTokeniser to public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package parse(string String, tokens Deque) : Node extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private readArrayType(string String, tokens Deque, expectedEndToken String) : List extracted from private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node in class io.undertow.predicate.PredicateParser",
        "comment": "<p>added</p><p>Even the original methods used to call&nbsp;readArrayType, so I can't mark this as TP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private loadPredicateBuilders(classLoader ClassLoader) : Map extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>The method which is reported to be extracted seems to be in the original method being unified as well, but with different name (loadBuilders), so this is false positive.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private collapseOutput(token Object, tokens Deque) : Node from class io.undertow.predicate.PredicateParser to private collapseOutput(token Node, tokens Deque) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private handleSingleArrayValue(string String, builder Token, tokens Deque, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>There were two&nbsp;handleSingleArrayValue methods, they seem to be unified and moved to the target class, but one is more similar to the handleSingleArrayValue method in the target class. Since <a href='219'>the other one</a> is marked as TP, we should mark this as FP.</p><p>Update: After seeing this case, I understood that we accepted similar cases as TP in both cases.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public parse(string String, tokens Deque, classLoader ClassLoader) : Predicate inlined to public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>line 97 in the before refactoring version. The method is Inlined from class <span class='blob-code-inner'><span class='pl-en'>PredicateParser.<br /></span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private handleNode(contents String, node Node, predicateBuilders Map, handlerBuilders Map, attributeParser ExchangeAttributeParser) : List extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>DOUBLE CHECK WITH MATIN. This is one of the cases I believe should be FP because the original code does not have anything to do with the extracted code.</p><p>Nikos: The added code is completely new functionality. It has not been extracted from existing code.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public tokenize(string String) : Deque from class io.undertow.util.PredicateTokeniser to public tokenize(string String) : Deque from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private handleLineEnd(string String, operatorStack Deque, output Deque, blocks List) : void extracted from package parse(string String, tokens Deque, builders Map, attributeParser ExchangeAttributeParser) : Predicate in class io.undertow.predicate.PredicateParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method package parse(string String, tokens Deque, builders Map, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser to package parse(string String, tokens Deque, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private readArrayType(string String, tokens Deque, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>&nbsp;</p><p>This is like case refactroing with ID= 4278</p><p>Two methods (with very similar body) with name readArrayType(..) from two different classes PredicateParser and HandlerParser are moved to class PredicatedHandlersParser. We also verified it with Nik.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private readArrayType(string String, tokens Deque, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private loadHandlerBuilders(classLoader ClassLoader) : Map extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private node : Node from class io.undertow.predicate.PredicateParser.NotNode to class io.undertow.server.handlers.builder.PredicatedHandlersParser.NotNode",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1111363,
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "sha1": "b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "url": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "author": "Greg Turnquist",
    "time": "6/15/15 10:32 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected setupMockMvc() : void extracted from public setUp() : void in class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1111984,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
    "url": "https://github.com/checkstyle/checkstyle/commit/5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
    "author": "Roman Ivanov",
    "time": "6/15/15 1:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private processField(ast DetailAST, parentType int) : void extracted from private processIDENT(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2863
}, {
    "id": 1112031,
    "repository": "https://github.com/eclipse/vert.x.git",
    "sha1": "718782014519034b28f6d3182fd9d340b7b31a74",
    "url": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "author": "purplefox",
    "time": "6/15/15 7:22 AM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler to class io.vertx.core.http.impl.VertxHttpHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1710
}, {
    "id": 1112091,
    "repository": "https://github.com/droolsjbpm/drools.git",
    "sha1": "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "url": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "author": "Mario Fusco",
    "time": "6/15/15 9:41 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private evaluatingActionQueue : AtomicBoolean from class org.drools.core.impl.StatefulKnowledgeSessionImpl to class org.drools.reteoo.common.ReteWorkingMemory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public notifyHalt() : void from class org.drools.core.common.DefaultAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public notifyHalt() : void from class org.drools.reteoo.common.ReteAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda",
        "comment": "<p>Obvious case</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private internalFlush() : void renamed to public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public addActivation(item AgendaItem, notify boolean) : void renamed to public fireTimedActivation(activation Activation) : boolean in class org.drools.core.common.DefaultAgenda",
        "comment": "<p>Second Opinion. Seems FP</p><p>Davood: The bodies are the same with one throw statement</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private waitAndEnterExecutionState(newState ExecutionState) : void extracted from public fireUntilHalt(agendaFilter AgendaFilter) : void in class org.drools.core.common.DefaultAgenda",
        "comment": " Statements in waitAndEnterExecutionState(..) are not part of  fireUntilHalt(..)",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public takeAll() : PropagationEntry extracted from public flush() : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": "<p>Laleh: hard to say if indeed it is an extract method, there&nbsp;are other changes too</p><p>Davood and Matin: internalFlush() was renamed to takeAll()</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public add(handle EventFactHandle) : void extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "<p>Extract and Move to the inner class.</p><p>Since RefDiff does not detect 'Extract and Move refactoring' we accept it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public poll() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public remove() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public remove(handle EventFactHandle) : void extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public notifyHalt() : void extracted from public queueWorkingMemoryAction(action WorkingMemoryAction) : void in class org.drools.reteoo.common.ReteWorkingMemory & moved to class org.drools.core.impl.StatefulKnowledgeSessionImpl",
        "comment": "<p>added</p><p>The extracted method does not have anything to do with the original method! Should be FP. TO BE CHECKED WITH LALEH</p><p>Laleh:</p><p>in the base version we have this.agenda.notifyHalt(); agenda is of type&nbsp; InternalAgenda. In the refactored version we have notifyHalt().<br />notifyHalt() is defied (in the refactored version) in the parent of class ReteWorkingMemory which is StatefulKnowledgeSessionImpl<br />the body of notifyHalt() in StatefulKnowledgeSessionImpl we have: propagationList.notifyHalt();<br />knowing that InternalAgenda has no type relation with PropagationList =&gt; it is FP</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setExpiringHandle(expiringHandle EventFactHandle) : void extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean extracted from private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList, agenda InternalAgenda) : int in class org.drools.core.phreak.RuleExecutor",
        "comment": "<p>There exists&nbsp; method haltRuleFiring(..) in the before refactoring version, only one parameter is added to this method in the after refactoring version and its body is modified. </p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 13908
}, {
    "id": 1112624,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "url": "https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "author": "Oliver Gierke",
    "time": "6/15/15 4:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private updateEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1019
}, {
    "id": 1112627,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "20d39f7af2165c67d5221f556f58820c992d2cc6",
    "url": "https://github.com/spring-projects/spring-boot/commit/20d39f7af2165c67d5221f556f58820c992d2cc6",
    "author": "Phillip Webb",
    "time": "6/15/15 3:31 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getFullKey(path String, key String) : String extracted from private flatten(properties Properties, input Map<String,Object>, path String) : void in class org.springframework.boot.cloudfoundry.VcapApplicationListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4633
}, {
    "id": 1112638,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
    "author": "Michael Bestas",
    "time": "6/15/15 1:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initTickerView() : void extracted from protected makeStatusBarView() : PhoneStatusBarView in class com.android.systemui.statusbar.phone.PhoneStatusBar",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6868
}, {
    "id": 1112642,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "1089957b645bde069d3864563bbf1f7c7da8045c",
    "url": "https://github.com/orientechnologies/orientdb/commit/1089957b645bde069d3864563bbf1f7c7da8045c",
    "author": "Tglman",
    "time": "6/16/15 7:33 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void extracted from private rewriteLinksInDocument(document ODocument) : void in class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1755
}, {
    "id": 1112702,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "5f18bed8da4dda4fa516907ecbbe28f712e944f7",
    "url": "https://github.com/JetBrains/intellij-community/commit/5f18bed8da4dda4fa516907ecbbe28f712e944f7",
    "author": "Konstantin Bulenkov",
    "time": "6/16/15 7:14 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.util.ui.components.JBPanel moved to com.intellij.ui.components.JBPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 18800
}, {
    "id": 1116609,
    "repository": "https://github.com/belaban/JGroups.git",
    "sha1": "f1533756133dec84ce8218202585ac85904da7c9",
    "url": "https://github.com/belaban/JGroups/commit/f1533756133dec84ce8218202585ac85904da7c9",
    "author": "Bela Ban",
    "time": "6/16/15 8:16 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public isInMembersList(sender IpAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1121
}, {
    "id": 1116627,
    "repository": "https://github.com/hierynomus/sshj.git",
    "sha1": "7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "url": "https://github.com/hierynomus/sshj/commit/7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "author": "Jeroen van Erp",
    "time": "6/16/15 9:12 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class nl.javadude.sshj.connection.channel.ChannelCloseEofTest moved to com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hierynomus.sshj.SshIntegrationTestBase from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldCorrectlyHandleSessionChannelEof() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public shouldCorrectlyHandleSessionChannelEof() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is 'Move class' refacoting</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setUp() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public setUp() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public tearDown() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public tearDown() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move calss.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private sshClient : SSHClient from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move class.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1116663,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "url": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "author": "Thomas Gummerer",
    "time": "6/15/15 5:07 PM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.AdbOptions renamed to com.facebook.buck.cli.AdbCommandLineOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.TargetDeviceOptionsTest renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.TargetDeviceOptions renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.InstallEvent moved to com.facebook.buck.event.InstallEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.InstallEventTest moved to com.facebook.buck.event.InstallEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.StartActivityEvent moved to com.facebook.buck.event.StartActivityEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.StartActivityEventTest moved to com.facebook.buck.event.StartActivityEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.TestDevice moved to com.facebook.buck.android.TestDevice",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.UninstallEvent moved to com.facebook.buck.event.UninstallEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.UninstallEventTest moved to com.facebook.buck.event.UninstallEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.AdbHelper moved to com.facebook.buck.android.AdbHelper",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.AdbHelperTest moved to com.facebook.buck.android.AdbHelperTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldReturnAnAbsentOptionalIfNoTargetDeviceOptionsSet() : void renamed to public shouldReturnAnAbsentOptionalIfNoTargetDeviceCommandLineOptionsSet() : void in class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isMultiInstallModeEnabled() : boolean renamed to public getAdbOptions() : AdbOptions in class com.facebook.buck.cli.AdbCommandLineOptions",
        "comment": "Second Opinion. Two method merged to one",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdbThreadCount() : int from class com.facebook.buck.cli.AdbOptions to public getAdbThreadCount() : int from class com.facebook.buck.android.AdbOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 11495
}, {
    "id": 1116953,
    "repository": "https://github.com/eclipse/vert.x.git",
    "sha1": "32a8c9086040fd6d6fa11a214570ee4f75a4301f",
    "url": "https://github.com/eclipse/vert.x/commit/32a8c9086040fd6d6fa11a214570ee4f75a4301f",
    "author": "purplefox",
    "time": "6/16/15 6:37 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private handleHttp(conn ServerConnection, ch Channel, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private handleExpectWebsockets(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 783
}, {
    "id": 1116967,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
    "url": "https://github.com/Netflix/eureka/commit/f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
    "author": "Bertrand Renuart",
    "time": "6/15/15 6:55 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void extracted from private updateInstanceRemoteStatus() : void in class com.netflix.discovery.DiscoveryClient",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2243
}, {
    "id": 1117213,
    "repository": "https://github.com/geoserver/geoserver.git",
    "sha1": "182f4d1174036417aad9d6db908ceaf64234fd5f",
    "url": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "author": "Andrea Aime",
    "time": "6/17/15 6:09 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.AbstractVectorTransform renamed to org.geoserver.importer.transform.AbstractTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method package error(tx VectorTransform, e Exception) : void from class org.geoserver.importer.transform.VectorTransformChain to protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method package filter(transforms List, type Class) : List from class org.geoserver.importer.transform.VectorTransformChain to protected filter(transforms List, type Class) : List from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 6443
}, {
    "id": 1117231,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "url": "https://github.com/spring-projects/spring-boot/commit/cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "author": "Stephane Nicoll",
    "time": "6/17/15 4:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideMessageCodesFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideLocale() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noLocaleResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public resourceHandlerMappingOverrideAll() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public customContentNegotiatingViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public customViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public resourceHandlerMappingOverrideWebjars() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noMessageCodesResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public ignoreDefaultModelOnRedirectIsTrue() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public handerAdaptersCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public handerMappingsCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public resourceHandlerMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public faviconMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public defaultAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2439
}, {
    "id": 1117232,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "b47634176fa48ad925f79886c6aaca225cb9af64",
    "url": "https://github.com/spring-projects/spring-boot/commit/b47634176fa48ad925f79886c6aaca225cb9af64",
    "author": "izeye",
    "time": "6/17/15 2:03 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll() : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll(prefix String) : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3235
}, {
    "id": 1117304,
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "sha1": "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "url": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "author": "Peter",
    "time": "6/17/15 5:42 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseGraph() : Graph from class com.graphhopper.storage.LevelGraphStorage to public getBaseGraph() : Graph from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
        "comment": "the method exist in the base class but the class is renamed so I think RefactoringMiner cannot find it in the new revision",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.LevelGraphStorage renamed to com.graphhopper.storage.LevelGraphImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage renamed to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public newGraph(dir Directory, is3D boolean) : GraphStorage renamed to public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getEdge() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getEdgePointer() : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to private getEdgePointer() : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "original class moved to antoher class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public next() : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "the original Class moved to another class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public next() : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getEdge() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method getName() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "<p>The inner class has moved and contains the method which is marked as moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method getDistance() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "original class moved to another class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCount() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getCount() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method copyPropertiesTo(edge EdgeIteratorState) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method setWayGeometry(pillarNodes PointList) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testTwoWeightsPerEdge2() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testWithCoordinates() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph extracted from public createFactory(g Graph, opts AlgorithmOptions) : RoutingAlgorithmFactory in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "comment": "It will be hard to detect, it needs semantic analysis.",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package close() : void extracted from public close() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package create(initSize long) : void extracted from public create(byteCount long) : GraphStorage in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package flush() : void extracted from public flush() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package loadExisting(dim String) : void extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package setSegmentSize(bytes int) : void extracted from public setSegmentSize(bytes int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isCHPossible() : boolean extracted from public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isCHPossible() : boolean extracted from package _copyTo(clonedG GraphHopperStorage) : Graph in class com.graphhopper.storage.GraphHopperStorage",
        "comment": "The  statement in isCHPossible() does not match to any statements in  _copyTo(clonedG GraphHopperStorage)",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeA : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeB : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package baseNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package edgeId : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nextEdge : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private maxEdges : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package filter : EdgeFilter from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package adjNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void extracted from protected importData() : DataReader in class com.graphhopper.reader.OSMReaderTest.GraphHopperTest & moved to class com.graphhopper.GraphHopper",
        "comment": "<p>added</p><p>It seems to be a rename method!</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3012
}, {
    "id": 1117602,
    "repository": "https://github.com/bennidi/mbassador.git",
    "sha1": "40e41d11d7847d660bba6691859b0506514bd0ac",
    "url": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "author": "bennidi",
    "time": "6/17/15 7:55 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class net.engio.mbassy.ConditionalHandlers.ConditionalMessageListener moved to net.engio.mbassy.ConditionalHandlerTest.ConditionalMessageListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.engio.mbassy.ConditionalHandlers.TestEvent moved to net.engio.mbassy.ConditionalHandlerTest.TestEvent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleMethodAccessEL() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>Ex and move method</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Rename Class",
        "description": "Rename Class net.engio.mbassy.ConditionalHandlers renamed to net.engio.mbassy.ConditionalHandlerTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleStringCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>ex N move</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testNotMatchingAnyCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>ex and Move</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleCombinedEL() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>Extract and move</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleNumberCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>added</p><p>Extract and move to other class. Since RefdDiff does not detect extract and move we consider it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117817,
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "sha1": "da29a040ebae664274b28117b157044af0f525fa",
    "url": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "author": "Tatu Saloranta",
    "time": "6/17/15 3:02 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from protected _configAndWriteValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is moved to the inner class, it should be extract and move",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is moved to the inner class, it should be extract and move",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1433
}, {
    "id": 1117875,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "url": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "author": "David Liu",
    "time": "6/15/15 10:22 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.netflix.discovery.BaseDiscoveryClientTester from class com.netflix.discovery.AbstractDiscoveryClientTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 766
}, {
    "id": 1117916,
    "repository": "https://github.com/robovm/robovm.git",
    "sha1": "bf5ee44b3b576e01ab09cae9f50300417b01dc07",
    "url": "https://github.com/robovm/robovm/commit/bf5ee44b3b576e01ab09cae9f50300417b01dc07",
    "author": "BlueRiverInteractive",
    "time": "6/16/15 1:58 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getOverflowServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getPeripherals() : NSArray<CBPeripheral> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getScanServices() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getServices() : NSArray<CBMutableService> in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public get8BIMData() : CGImageProperty8BIMData renamed to public getData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isAllowingDuplicates() : boolean renamed to public allowsDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isContainingFloatingPointPixels() : boolean renamed to public containsFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isEmbeddingThumbnail() : boolean renamed to public embedsThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isEnumeratingRecursively() : boolean renamed to public enumeratesRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isMergingMetadata() : boolean renamed to public mergesMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnConnection() : boolean renamed to public notifiesOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnDisconnection() : boolean renamed to public notifiesOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnNotification() : boolean renamed to public notifiesOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData renamed to public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getContactInfo() : CGImagePropertyIPTCContactInfoData renamed to public getCreatorContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnDisconnection(notifiesOnDisconnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnNotification(notifiesOnNotification boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnConnection(notifiesOnConnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions renamed to public setMergesMetadata(mergesMetadata boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setIndexed(isIndexed boolean) : CGImageProperties renamed to public setIsIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties renamed to public setEmbedsThumbnail(embedsThumbnail boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions renamed to public setEnumeratesRecursively(enumeratesRecursively boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value String) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value double) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value String) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value String) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value double) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value double) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value String) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value double) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value double) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value String) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value double) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value double) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value double) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value double) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value String) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value String) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value double) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value String) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value String) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value String) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value double) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value double) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value String) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value String) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value double) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value String) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value double) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGIFData(metadata CGImagePropertyGIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDepth(depth int) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifAuxData(metadata CGImagePropertyExifAuxData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCache(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setHasAlphaChannel(alphaChannel boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerMinoltaData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerOlympusData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setDateTime(dateTime String) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setAllowsDuplicates(allowDuplicates boolean) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldAllowFloat(allowFloat boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setTypeIdentifierHint(typeIdentifier String) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setMaxPixelSize(size long) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setCIFFData(metadata CGImagePropertyCIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setColorModel(colorModel CGImagePropertyColorModel) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public set8BIMData(metadata CGImageProperty8BIMData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIWidth(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setSolicitedServiceUUIDs(uuids NSArray) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeGPS(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIPTCData(metadata CGImagePropertyIPTCData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setLossyCompressionQuality(quality double) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerFujiData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGPSData(metadata CGImagePropertyGPSData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setContainsFloatingPointPixels(isFloat boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailWithTransform(transform boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerNikonData(metadata CGImagePropertyNikonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setRawData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerPentaxData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setJFIFData(metadata CGImagePropertyJFIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setFileSize(fileSize long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setTIFFData(metadata CGImagePropertyTIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageMetadataEnumerationOptions extracted from public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setThumbnailMaxPixelSize(maxSize long) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDNGData(metadata CGImagePropertyDNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIHeight(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeXMP(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setICCProfile(profile String) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPNGData(metadata CGImagePropertyPNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifData(metadata CGImagePropertyExifData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCacheImmediately(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerCanonData(metadata CGImagePropertyCanonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailFromImageIfAbsent(createThumbnail boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelHeight(height long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelWidth(width long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setBackgroundColor(color CGColor) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMetadata(metadata CGImageMetadata) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImageProperty8BIM, type Class) : T extracted from public getString(property CGImageProperty8BIM) : String in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImageProperty8BIM, type Class) : T extracted from public getNumber(property CGImageProperty8BIM) : double in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCIFF, type Class) : T extracted from public getString(property CGImagePropertyCIFF) : String in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCIFF, type Class) : T extracted from public getNumber(property CGImagePropertyCIFF) : double in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCanon, type Class) : T extracted from public getString(property CGImagePropertyCanon) : String in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCanon, type Class) : T extracted from public getNumber(property CGImagePropertyCanon) : double in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyDNG, type Class) : T extracted from public getString(property CGImagePropertyDNG) : String in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyDNG, type Class) : T extracted from public getNumber(property CGImagePropertyDNG) : double in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExifAux, type Class) : T extracted from public getNumber(property CGImagePropertyExifAux) : double in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExifAux, type Class) : T extracted from public getString(property CGImagePropertyExifAux) : String in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExif, type Class) : T extracted from public getNumber(property CGImagePropertyExif) : double in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExif, type Class) : T extracted from public getString(property CGImagePropertyExif) : String in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGIF, type Class) : T extracted from public getString(property CGImagePropertyGIF) : String in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGIF, type Class) : T extracted from public getNumber(property CGImagePropertyGIF) : double in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGPS, type Class) : T extracted from public getNumber(property CGImagePropertyGPS) : double in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGPS, type Class) : T extracted from public getString(property CGImagePropertyGPS) : String in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class) : T extracted from public getString(property CGImagePropertyIPTCContactInfo) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class) : T extracted from public getNumber(property CGImagePropertyIPTCContactInfo) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTC, type Class) : T extracted from public getString(property CGImagePropertyIPTC) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTC, type Class) : T extracted from public getNumber(property CGImagePropertyIPTC) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyJFIF, type Class) : T extracted from public getString(property CGImagePropertyJFIF) : String in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyJFIF, type Class) : T extracted from public getNumber(property CGImagePropertyJFIF) : double in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyNikon, type Class) : T extracted from public getString(property CGImagePropertyNikon) : String in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyNikon, type Class) : T extracted from public getNumber(property CGImagePropertyNikon) : double in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyPNG, type Class) : T extracted from public getString(property CGImagePropertyPNG) : String in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyPNG, type Class) : T extracted from public getNumber(property CGImagePropertyPNG) : double in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyTIFF, type Class) : T extracted from public getString(property CGImagePropertyTIFF) : String in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyTIFF, type Class) : T extracted from public getNumber(property CGImagePropertyTIFF) : double in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getOverflowServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getPeripherals() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getSolicitedServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getSolicitedServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getServices() : NSArray in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getScanServices() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key NSString) : NSObject extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CFString, type Class) : T extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTC, type Class) : T extracted from public getContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 11040
}, {
    "id": 1118131,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
    "author": "jie.liu",
    "time": "6/17/15 11:39 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected reset(animateTransition boolean) : void extracted from public reset() : void in class com.android.keyguard.KeyguardAbsKeyInputView",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6165
}, {
    "id": 1118292,
    "repository": "https://github.com/open-keychain/open-keychain.git",
    "sha1": "c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
    "url": "https://github.com/open-keychain/open-keychain/commit/c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
    "author": "Vincent Breitmoser",
    "time": "6/17/15 10:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public displayInputFragment(showOpenDialog boolean) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected cryptoOperation(cryptoInput CryptoInputParcel, showProgress boolean) : void extracted from protected cryptoOperation(cryptoInput CryptoInputParcel) : void in class org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public displayListFragment(inputUri Uri) : void renamed to public displayInputFragment(showOpenDialog boolean) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public displayListFragment(inputUris ArrayList) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": "The code of displayListFragment(inputUris ArrayList) is taken from displayListFragment(inputUri Uri). Temporary variables were introduced to break the long chain of method calls.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Nikos"
    }],
    "refDiffExecutionTime": 1261
}, {
    "id": 1118362,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "url": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "author": "alarmnummer",
    "time": "6/17/15 9:05 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.hazelcast.spi.ServiceInfo moved to com.hazelcast.spi.impl.servicemanager.ServiceInfo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8786
}, {
    "id": 1118568,
    "repository": "https://github.com/AsyncHttpClient/async-http-client.git",
    "sha1": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "url": "https://github.com/AsyncHttpClient/async-http-client/commit/f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "author": "Stephane Landelle",
    "time": "6/17/15 6:11 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : StringBuilder extracted from public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : String in class org.asynchttpclient.oauth.OAuthSignatureCalculator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 548
}, {
    "id": 1119082,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "ab298886b59f4ad0235cd6d5764854189eb59eb6",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/ab298886b59f4ad0235cd6d5764854189eb59eb6",
    "author": "Danilo Ercoli",
    "time": "6/18/15 8:36 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void extracted from public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void in class org.wordpress.android.ui.stats.StatsUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.wordpress.android.ui.stats.StatsSinglePostDetailsActivity renamed to org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1502
}, {
    "id": 1119086,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
    "author": "Oguz Kocer",
    "time": "6/18/15 7:25 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getIconImageURL(size int, iconUrl String, blogUrl String) : String extracted from public getIconImageURL(size int) : String in class org.wordpress.android.models.Blog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1995
}, {
    "id": 1120196,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "4bfe164cc8b4556b98df18098b162e0a84038b32",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/4bfe164cc8b4556b98df18098b162e0a84038b32",
    "author": "Danilo Ercoli",
    "time": "6/19/15 12:15 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private trackLastVisibleTab(position int) : void extracted from protected onResume() : void in class org.wordpress.android.ui.main.WPMainActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1371
}, {
    "id": 1120722,
    "repository": "https://github.com/osmandapp/Osmand.git",
    "sha1": "c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
    "url": "https://github.com/osmandapp/Osmand/commit/c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
    "author": "Victor Shcherb",
    "time": "6/20/15 5:09 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addPreviousToActionPoints(lastProjection Location, routeNodes List<Location>, DISTANCE_ACTION double, prevFinishPoint int, routePoint int, loc Location) : void extracted from private calculateActionPoints(topLatitude double, leftLongitude double, bottomLatitude double, rightLongitude double, lastProjection Location, routeNodes List<Location>, cd int, it Iterator<RouteDirectionInfo>, zoom int) : void in class net.osmand.plus.views.RouteLayer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1993
}, {
    "id": 1120803,
    "repository": "https://github.com/codefollower/Lealone.git",
    "sha1": "7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
    "url": "https://github.com/codefollower/Lealone/commit/7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
    "author": "Honghua Zhu",
    "time": "6/20/15 11:57 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getCharArray(e Expression) : char[] renamed to private getByteArray(session Session, e Expression) : byte[] in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>&nbsp;setPassword is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>setSaltAndHash(..) is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 638
}, {
    "id": 1120836,
    "repository": "https://github.com/SlimeKnights/TinkersConstruct.git",
    "sha1": "71820e573134be3fad3935035249cd77c4412f4e",
    "url": "https://github.com/SlimeKnights/TinkersConstruct/commit/71820e573134be3fad3935035249cd77c4412f4e",
    "author": "Bernhard Bonigl",
    "time": "6/20/15 11:27 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public matches(stacks Collection) : RecipeMatch.Match extracted from public matches(stacks ItemStack[]) : RecipeMatch.Match in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p>Nikos: This method has been extracted and moved to newly added class <span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry. Consider as CTP<br /></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Nikos"
    }, {
        "type": "Move Class",
        "description": "Move Class tconstruct.library.modifiers.RecipeMatch.Match moved to tconstruct.library.mantle.RecipeMatch.Match",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addItem(oredictItem String) : void extracted from public addItem(item Item) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p>Nikos: After refactoring method delegates to {<span class='blob-code-inner'><span class='x x-first'>modifierItems</span><span class='pl-k x x-last'>.</span>addItem(oredictItem String)</span>}<br />Modifier. addItem(oredictItem String) {<span class='blob-code-inner'>addItem(oredictItem<span class='x x-first'>, </span><span class='pl-c1 x x-last'>1</span>);</span> }<br />RecipeMatchRegistry.addItem(item Item) {<span class='blob-code-inner'>addItem(item, <span class='pl-c1'>1</span>, <span class='pl-c1'>1</span>);</span>}</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private oredictEntry : String from class tconstruct.library.modifiers.RecipeMatch.Oredict to class tconstruct.library.mantle.RecipeMatch.Oredict",
        "comment": "<p>class tconstruct.library.modifiers.RecipeMatch.Oredict is moved to&nbsp; tconstruct.library.mantle.RecipeMatch.Oredict.</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.modifiers.RecipeMatch to public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.mantle.RecipeMatch",
        "comment": "<p>Move class tconstruct.library.modifiers.RecipeMatch to tconstruct.library.mantle.RecipeMatch&nbsp; is already detetced by RefDiff and it is TP. So this case is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addItem(oredictItem String) : void extracted from public addItem(oredictItem String) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This method has been extracted and moved to newly added class RecipeMatchRegistry. Consider as CTP</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addItem(block Block, amountMatched int) : void extracted from public addItem(block Block, count int) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This method has been extracted and moved to newly added class RecipeMatchRegistry. Consider as CTP</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public addItem(oredictItem String, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(oredictItem String, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This case was considered as Extract and Move Method. Move Method will be considered FP. </span></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private template : ItemStack from class tconstruct.library.modifiers.RecipeMatch.Item to class tconstruct.library.mantle.RecipeMatch.Item",
        "comment": "<p>Basically the inner class <span class='blob-code-inner'><span class='pl-smi'>tconstruct.library.<span class='x x-first x-last'>modifiers</span></span></span>.RecipeMatch.Item is moved to class construct.library.mantle.RecipeMatch.Item.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public addItem(item Item, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(item Item, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This case was considered as Extract and Move Method. Move Method will be considered FP.</span></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120898,
    "repository": "https://github.com/joel-costigliola/assertj-core.git",
    "sha1": "b36ab386559d04db114db8edd87c8d4cbf850c12",
    "url": "https://github.com/joel-costigliola/assertj-core/commit/b36ab386559d04db114db8edd87c8d4cbf850c12",
    "author": "Joel Costigliola",
    "time": "6/21/15 2:25 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.assertj.core.api.StrictAssertions from class org.assertj.core.api.Assertions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120931,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "url": "https://github.com/facebook/buck/commit/7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "author": "Eugene Susla",
    "time": "6/19/15 6:27 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createBuckFiles(buckFilesData Map<Path,SortedSet<Prebuilt>>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1910
}, {
    "id": 1120997,
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "sha1": "1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "url": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "author": "Brett Wooldridge",
    "time": "6/20/15 3:12 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.IConcurrentBagEntry moved to com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.IBagStateListener moved to com.zaxxer.hikari.util.ConcurrentBag.IBagStateListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 462
}, {
    "id": 1120998,
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "sha1": "cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
    "url": "https://github.com/brettwooldridge/HikariCP/commit/cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
    "author": "Brett Wooldridge",
    "time": "6/20/15 3:06 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.NanosecondClockSource moved to com.zaxxer.hikari.util.ClockSource.NanosecondClockSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.MillisecondClockSource moved to com.zaxxer.hikari.util.ClockSource.MillisecondClockSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 527
}, {
    "id": 1121053,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "acf67c8cb58d13827e14bbeeec11a66f9277015f",
    "url": "https://github.com/processing/processing/commit/acf67c8cb58d13827e14bbeeec11a66f9277015f",
    "author": "Ben Fry",
    "time": "6/19/15 6:31 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method protected runSketchEDT(args String[], constructedSketch PApplet) : void inlined to public runSketch(args String[], constructedSketch PApplet) : void in class processing.core.PApplet",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1106
}, {
    "id": 1121219,
    "repository": "https://github.com/ratpack/ratpack.git",
    "sha1": "da6167af3bdbf7663af6c20fb603aba27dd5e174",
    "url": "https://github.com/ratpack/ratpack/commit/da6167af3bdbf7663af6c20fb603aba27dd5e174",
    "author": "Luke Daley",
    "time": "6/19/15 10:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private post(responseStatus HttpResponseStatus, lastContentFuture ChannelFuture) : void extracted from private post(responseStatus HttpResponseStatus) : void in class ratpack.server.internal.DefaultResponseTransmitter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1342
}, {
    "id": 1121362,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "f841d8dda2bf461f595755f85c3eba786783702d",
    "url": "https://github.com/gradle/gradle/commit/f841d8dda2bf461f595755f85c3eba786783702d",
    "author": "Adam Murdoch",
    "time": "6/19/15 1:38 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private adaptResult(result BuildResult, startTime long, endTime long) : AbstractOperationResult inlined to private adaptResult(source BuildOperationInternal) : AbstractOperationResult in class org.gradle.tooling.internal.provider.runner.ClientForwardingBuildListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getPayload() : Object renamed to public getFailure() : Throwable in class org.gradle.internal.progress.BuildOperationInternal",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 4945
}, {
    "id": 1121732,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "ffae1691c0cd526ed1095fbabbc0855d016790d7",
    "url": "https://github.com/apache/drill/commit/ffae1691c0cd526ed1095fbabbc0855d016790d7",
    "author": "Jinfeng Ni",
    "time": "6/20/15 7:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(sqlNode SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
        "comment": "<p>Extract and Move to other class.</p><p>The convertToDrel(relNode RelNode)&nbsp; in the parent class (<span class='pl-e'>DefaultSqlHandler</span>) is extratced form convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List) .</p><p>See refacoting: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1073</p><p>So for this class consider it as CTP since it is 'extratc and move to other class'</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(node SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
        "comment": "<p>Extratc and Move to other class.</p><p>The validateAndConvert(sqlNode SqlNode) in the parent class (DefaultSqlHandler) is extracted from getPlan(node SqlNode).</p><p>See refactroing:&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1072</p><p>So for this class we should consider it as Extract and move to other (here parent) class.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 2598
}, {
    "id": 1121836,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "url": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "author": "Sebastien Deleuze",
    "time": "6/22/15 12:05 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void extracted from public write(t T, contentType MediaType, outputMessage HttpOutputMessage) : void in class org.springframework.http.converter.AbstractHttpMessageConverter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonViewController renamed to org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.http.converter.AbstractGenericHttpMessageConverter from class org.springframework.http.converter.json.GsonHttpMessageConverter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.http.converter.AbstractGenericHttpMessageConverter from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "comment": "<p>No method or attribute has been pulled up</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3276
}, {
    "id": 1122401,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "url": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "author": "branimir",
    "time": "6/23/15 8:03 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getRandomToken(r Random) : LongToken extracted from public getRandomToken() : LongToken in class org.apache.cassandra.dht.Murmur3Partitioner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void extracted from private generateFakeEndpoints(numOldNodes int) : void in class org.apache.cassandra.dht.BootStrapperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection<String>) : Collection<Token> extracted from public getBootstrapTokens(metadata TokenMetadata) : Collection<Token> in class org.apache.cassandra.dht.BootStrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getBootstrapTokens(metadata TokenMetadata) : Collection renamed to private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection) : Collection in class org.apache.cassandra.dht.BootStrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 8768
}, {
    "id": 1122454,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "5373a852a7e45715e0a6771b7cd56592994c07dd",
    "url": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "author": "Philipp Bogensberger",
    "time": "6/23/15 10:52 AM",
    "refactorings": [{
        "type": "Push Down Method",
        "description": "Push Down Method public plan() : Plan from class io.crate.planner.node.dql.ESDQLPlanNode to public plan() : Plan from class io.crate.planner.node.dql.ESGetNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1122508,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "url": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "author": "Rossen Stoyanchev",
    "time": "6/22/15 11:30 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.web.socket.server.support.AbstractHandshakeHandler from class org.springframework.web.socket.server.support.DefaultHandshakeHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2473
}, {
    "id": 1123108,
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "sha1": "b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "author": "Alexander Zolotov",
    "time": "6/23/15 1:18 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private GO_CHECK_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isAvailableInModule(module Module) : boolean extracted from protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean in class com.goide.runconfig.testing.GoTestRunConfigurationProducerBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private GO_CHECK_GITHUB_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public hasGoCheckSupport(module Module) : boolean extracted from public checkConfiguration() : void in class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration & moved to class com.goide.runconfig.GoRunUtil",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }],
    "refDiffExecutionTime": 917
}, {
    "id": 1123527,
    "repository": "https://github.com/structr/structr.git",
    "sha1": "6c59050b8b03adf6d8043f3fb7add0496f447edf",
    "url": "https://github.com/structr/structr/commit/6c59050b8b03adf6d8043f3fb7add0496f447edf",
    "author": "Axel Morgner",
    "time": "6/24/15 10:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getSchemaProperties(schemaNode SchemaNode) : List<SchemaProperty> extracted from private getPropertiesForView(type Class, view String, schemaNode SchemaNode) : Map<String,Object> in class org.structr.rest.resource.SchemaTypeResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1425
}, {
    "id": 1123651,
    "repository": "https://github.com/WhisperSystems/Signal-Android.git",
    "sha1": "99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
    "url": "https://github.com/WhisperSystems/Signal-Android/commit/99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
    "author": "Moxie Marlinspike",
    "time": "6/23/15 2:15 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.thoughtcrime.securesms.contacts.ContactPhotoFactory.ExpandingLayerDrawable moved to org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto.ExpandingLayerDrawable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private getSynchronousRecipient(context Context, recipientId long) : Recipient inlined to package getRecipient(context Context, recipientId long, asynchronous boolean) : Recipient in class org.thoughtcrime.securesms.recipients.RecipientProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getRecipientDetails(context Context, number String) : RecipientDetails renamed to private getIndividualRecipientDetails(context Context, number String) : RecipientDetails in class org.thoughtcrime.securesms.recipients.RecipientProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1123715,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "d49765899cb9df6781fff9773ffc244b5167351c",
    "url": "https://github.com/facebook/buck/commit/d49765899cb9df6781fff9773ffc244b5167351c",
    "author": "Russell Porter",
    "time": "6/24/15 1:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterLocales() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterStrings() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertNotMatchesRegex(path String) : void extracted from public testNonEnglishStringsPathRegex() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public enableStringsFilter() : Builder renamed to public enableStringWhitelisting() : Builder in class com.facebook.buck.android.FilterResourcesStep.Builder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStrings() : void renamed to public testWhitelistFilter() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStrings() : void renamed to private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet, locales ImmutableSet) : Predicate in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private matchesRegex(input String) : boolean renamed to private assertNotMatchesRegex(path String) : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStringsIncludingEnglishStrings() : void renamed to public testWhitelistFilter() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertMatchesRegex(path String, language String, country String) : void extracted from public testNonEnglishStringsPathRegex() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2754
}, {
    "id": 1123761,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
    "author": "Michael Bell",
    "time": "6/24/15 10:29 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from public closeChannel(channel StoredServerChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from package removeChannel(channel StoredClientChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private putChannel(channel StoredClientChannel, updateWallet boolean) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelClientState",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>Move to class StoredPaymentChannelServerStates</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelServerState",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>Moved to class StoredPaymentChannelServerStates</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1268
}, {
    "id": 1123770,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
    "author": "Amichai Rothman",
    "time": "6/24/15 10:21 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private digest : MessageDigest from class org.bitcoinj.core.Utils to class org.bitcoinj.core.Sha256Hash",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1883
}, {
    "id": 1123966,
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "sha1": "071588a418dbc743e0f7dbfe218cd8a6c0f97421",
    "url": "https://github.com/spring-projects/spring-data-neo4j/commit/071588a418dbc743e0f7dbfe218cd8a6c0f97421",
    "author": "Vince Bickers",
    "time": "6/24/15 2:10 PM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.springframework.data.neo4j.integration.movies to org.springframework.data.neo4j.queries",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package org.springframework.data.neo4j.integration.helloworld to org.springframework.data.neo4j.examples.galaxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.ApplicationConfig moved to org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.ProgrammaticRepositoryTest moved to org.springframework.data.neo4j.repositories.ProgrammaticRepositoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.UserRepository moved to org.springframework.data.neo4j.extensions.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.ExceptionTranslationTest moved to org.springframework.data.neo4j.template.ExceptionTranslationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.MovieRepository moved to org.springframework.data.neo4j.repositories.repo.MovieRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.TransactionBoundaryTest moved to org.springframework.data.neo4j.transactions.TransactionBoundaryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Cinema moved to org.springframework.data.neo4j.web.domain.Cinema",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.RepoScanningTest moved to org.springframework.data.neo4j.repositories.RepoScanningTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.RepositoryDefinitionTest moved to org.springframework.data.neo4j.repositories.RepositoryDefinitionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.TransactionIntegrationTest moved to org.springframework.data.neo4j.transactions.TransactionIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.WebIntegrationTest moved to org.springframework.data.neo4j.web.WebIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryTest moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.repository.support.GraphRepositoryFactoryTest moved to org.springframework.data.neo4j.repositories.support.GraphRepositoryFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.UserRepository moved to org.springframework.data.neo4j.repositories.repo.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.TemplateApplicationEventTest moved to org.springframework.data.neo4j.template.TemplateApplicationEventTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.context.DataManipulationEventConfiguration moved to org.springframework.data.neo4j.template.context.DataManipulationEventConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.service.WrapperService moved to org.springframework.data.neo4j.transactions.service.WrapperService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomPersistenceContext moved to org.springframework.data.neo4j.extensions.CustomPersistenceContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.repo.UserRepository moved to org.springframework.data.neo4j.web.repo.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepository moved to org.springframework.data.neo4j.extensions.CustomGraphRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.context.WebAppContext moved to org.springframework.data.neo4j.web.context.WebAppContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.Movie moved to org.springframework.data.neo4j.repositories.domain.Movie",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.service.UserService moved to org.springframework.data.neo4j.web.service.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.domain.User moved to org.springframework.data.neo4j.extensions.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryImpl moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.service.UserServiceImpl moved to org.springframework.data.neo4j.web.service.UserServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.service.BusinessService moved to org.springframework.data.neo4j.transactions.service.BusinessService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.repo.GenreRepository moved to org.springframework.data.neo4j.web.repo.GenreRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.User moved to org.springframework.data.neo4j.repositories.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.User moved to org.springframework.data.neo4j.web.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.Neo4jTemplateTest moved to org.springframework.data.neo4j.template.Neo4jTemplateTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext moved to org.springframework.data.neo4j.web.context.WebPersistenceContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.controller.UserController moved to org.springframework.data.neo4j.web.controller.UserController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.TestNeo4jEventListener moved to org.springframework.data.neo4j.template.TestNeo4jEventListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.PersistenceContextInTheSamePackage moved to org.springframework.data.neo4j.repositories.repo.PersistenceContextInTheSamePackage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.repositories.context.PersistenceContext renamed to org.springframework.data.neo4j.repositories.context.RepositoriesTestContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.movies.context.PersistenceContext renamed to org.springframework.data.neo4j.examples.movies.context.MoviesContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.helloworld.context.HelloWorldContext renamed to org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.movies.End2EndIntegrationTest renamed to org.springframework.data.neo4j.examples.movies.MoviesIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.jsr303.PersistenceConfiguration renamed to org.springframework.data.neo4j.examples.jsr303.JSR303Context",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.CinemaRepository moved to org.springframework.data.neo4j.examples.movies.repo.CinemaRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getId() : Long from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.TempMovie moved to org.springframework.data.neo4j.examples.movies.domain.TempMovie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.DerivedQueryTest moved to org.springframework.data.neo4j.queries.DerivedQueryTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Cinema moved to org.springframework.data.neo4j.examples.movies.domain.Cinema",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.TempMovieRepository moved to org.springframework.data.neo4j.examples.movies.repo.TempMovieRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getName() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.UnmanagedUserPojo moved to org.springframework.data.neo4j.examples.movies.repo.UnmanagedUserPojo",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public equals(obj Object) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Person moved to org.springframework.data.neo4j.examples.movies.domain.Person",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private reachableByRocket : Set from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.integration.jsr303.WebConfiguration to public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.RatingRepository moved to org.springframework.data.neo4j.examples.movies.repo.RatingRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.service.AdultService moved to org.springframework.data.neo4j.examples.jsr303.service.AdultService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Movie moved to org.springframework.data.neo4j.examples.movies.domain.Movie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.User moved to org.springframework.data.neo4j.examples.movies.domain.User",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.ReleasedMovie moved to org.springframework.data.neo4j.examples.movies.domain.ReleasedMovie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.service.UserService moved to org.springframework.data.neo4j.examples.movies.service.UserService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.UserRepository moved to org.springframework.data.neo4j.examples.movies.repo.UserRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSession() : Session from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public getSession() : Session from class org.springframework.data.neo4j.web.context.WebPersistenceContext",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": "<p>No method removed from&nbsp;WebPersistenceContext!</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.GalaxyServiceTest moved to org.springframework.data.neo4j.examples.galaxy.GalaxyServiceTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.transactions.ApplicationConfig to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.service.GalaxyService moved to org.springframework.data.neo4j.examples.galaxy.service.GalaxyService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractEntity",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.QueryIntegrationTest moved to org.springframework.data.neo4j.queries.QueryIntegrationTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractEntityRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.RichUserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.RichUserQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.GenreRepository moved to org.springframework.data.neo4j.examples.movies.repo.GenreRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.Gender moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.Gender",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.domain.Adult moved to org.springframework.data.neo4j.examples.jsr303.domain.Adult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.service.UserServiceImpl moved to org.springframework.data.neo4j.examples.movies.service.UserServiceImpl",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractAnnotatedEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractAnnotatedEntity",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setReachableByRocket(reachableByRocket Set) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public setReachableByRocket(reachableByRocket Set) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.ActorRepository moved to org.springframework.data.neo4j.examples.movies.repo.ActorRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.controller.AdultController moved to org.springframework.data.neo4j.examples.jsr303.controller.AdultController",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public hashCode() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.EntityWrappingQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.EntityWrappingQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.JSR303Test moved to org.springframework.data.neo4j.examples.jsr303.JSR303Test",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResultInterface moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResultInterface",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Rating moved to org.springframework.data.neo4j.examples.movies.domain.Rating",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private moons : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public toString() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getReachableByRocket() : Set from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getReachableByRocket() : Set from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractAnnotatedEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractAnnotatedEntityRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMoons() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getMoons() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Actor moved to org.springframework.data.neo4j.examples.movies.domain.Actor",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.repo.AdultRepository moved to org.springframework.data.neo4j.examples.jsr303.repo.AdultRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.WebConfiguration moved to org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.domain.World moved to org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1124355,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
    "url": "https://github.com/apache/drill/commit/00aa01fb90f3210d1e3027d7f759fb1085b814bd",
    "author": "Sudheesh Katkam",
    "time": "6/24/15 8:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private assertCompleteState(result Pair<QueryState,Exception>, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair<QueryState,Exception>, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private createExceptionOnBit(endpoint DrillbitEndpoint, desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createExceptionOnBit(siteClass Class, desc String, nSkip int, nFire int, exceptionClass Class, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private createException(desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createException(siteClass Class, desc String, nSkip int, nFire int, exceptionClass Class) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public newBuilder() : Builder extracted from private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addException(siteClass Class, desc String, exceptionClass Class, nSkip int, nFire int) : Builder extracted from public checkedInjection() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addException(siteClass Class, desc String, exceptionClass Class, nSkip int, nFire int) : Builder extracted from public skipAndLimit() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addExceptionOnBit(siteClass Class, desc String, exceptionClass Class, endpoint DrillbitEndpoint, nSkip int, nFire int) : Builder extracted from public injectionOnSpecificBit() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it is an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": "<p>Detected&nbsp; as Extract and Move to other class.&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public validateControlsString(jsonString String) : void extracted from private validateControlsString(controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public validateControlsString(jsonString String) : void extracted from public validate(v OptionValue) : void in class org.apache.drill.exec.testing.ExecutionControls.ControlsOptionValidator & moved to class org.apache.drill.exec.testing.ExecutionControls",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }],
    "refDiffExecutionTime": 2963
}, {
    "id": 1125095,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
    "url": "https://github.com/apache/drill/commit/c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
    "author": "vkorukanti",
    "time": "6/25/15 11:53 AM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getTempDir(dirName String) : String extracted from public getInstance() : HiveTestDataGenerator in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getTempDir(dirName String) : String extracted from private generateTestData() : void in class org.apache.drill.exec.store.hive.HiveTestDataGenerator",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public createNonCloseableClientWithCaching(hiveConf HiveConf, hiveConfigOverride Map) : DrillHiveMetaStoreClient extracted from public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private tableLoaders : LoadingCache from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private tableNameLoader : LoadingCache from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2022
}, {
    "id": 1125111,
    "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
    "sha1": "abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
    "url": "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
    "author": "Chris Kittrell",
    "time": "6/24/15 6:52 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.broadleafcommerce.openadmin.dto.override.MetadataOverride from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125117,
    "repository": "https://github.com/redsolution/xabber-android.git",
    "sha1": "faaf826e901f43d1b46105b18e655eb120f3ffef",
    "url": "https://github.com/redsolution/xabber-android/commit/faaf826e901f43d1b46105b18e655eb120f3ffef",
    "author": "Grigory Fedorov",
    "time": "6/26/15 10:16 AM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface com.xabber.android.ui.ContactAdder from class com.xabber.android.ui.ContactAddFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125333,
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "sha1": "e813a0be86c87366157a0201e6c61662cadee586",
    "url": "https://github.com/facebook/facebook-android-sdk/commit/e813a0be86c87366157a0201e6c61662cadee586",
    "author": "Sean Wiese",
    "time": "6/25/15 3:56 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getAndroidIdViaReflection(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.GameBoard moved to com.example.iconicus.GameBoard",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.GameController moved to com.example.iconicus.GameController",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.hellofacebook.HelloFacebookBroadcastReceiver moved to com.example.hellofacebook.HelloFacebookBroadcastReceiver",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.CommonObjects moved to com.example.rps.CommonObjects",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.ContentFragment moved to com.example.rps.ContentFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.MainActivity moved to com.example.rps.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.OpenGraphConsts moved to com.example.rps.OpenGraphConsts",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.RpsFragment moved to com.example.rps.RpsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.RpsGameUtils moved to com.example.rps.RpsGameUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.usersettings.UserSettingsFragment moved to com.example.rps.usersettings.UserSettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.ProfileFragment moved to com.example.switchuser.ProfileFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.Slot moved to com.example.switchuser.Slot",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.UserInfo moved to com.example.switchuser.UserInfo",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.UserInfoCache moved to com.example.switchuser.UserInfoCache",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.BaseListElement moved to com.example.scrumptious.BaseListElement",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.FullListView moved to com.example.scrumptious.FullListView",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.MainActivity moved to com.example.scrumptious.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.PickerActivity moved to com.example.scrumptious.PickerActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.ScrumptiousApplication moved to com.example.scrumptious.ScrumptiousApplication",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.SelectionFragment moved to com.example.scrumptious.SelectionFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.SplashFragment moved to com.example.scrumptious.SplashFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectAdapter moved to com.example.scrumptious.picker.GraphObjectAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectCursor moved to com.example.scrumptious.picker.GraphObjectCursor",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectPagingLoader moved to com.example.scrumptious.picker.GraphObjectPagingLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.usersettings.UserSettingsFragment moved to com.example.scrumptious.usersettings.UserSettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.SettingsFragment moved to com.example.switchuser.SettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.PickerFragment moved to com.example.scrumptious.picker.PickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.hellofacebook.HelloFacebookSampleActivity moved to com.example.hellofacebook.HelloFacebookSampleActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.MainActivity moved to com.example.switchuser.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.PlacePickerFragment moved to com.example.scrumptious.picker.PlacePickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.FriendPickerFragment moved to com.example.scrumptious.picker.FriendPickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.MainActivity moved to com.example.iconicus.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getAndroidIdViaService(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2914
}, {
    "id": 1126459,
    "repository": "https://github.com/ratpack/ratpack.git",
    "sha1": "2581441eda268c45306423dd4c515514d98a14a0",
    "url": "https://github.com/ratpack/ratpack/commit/2581441eda268c45306423dd4c515514d98a14a0",
    "author": "John Engelman",
    "time": "6/28/15 12:21 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class ratpack.jackson.JacksonModule moved to ratpack.jackson.guice.JacksonModule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1137
}, {
    "id": 1127274,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
    "url": "https://github.com/apache/hive/commit/7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
    "author": "Swarnim Kulkarni",
    "time": "6/27/15 8:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private unionTester(ws Schema, rs Schema, record GenericData.Record) : ResultPair extracted from private unionTester(s Schema, record GenericData.Record) : ResultPair in class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3223
}, {
    "id": 1129630,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "35668435090eb47cf8c5e704243510b6cee35a7b",
    "url": "https://github.com/apache/cassandra/commit/35668435090eb47cf8c5e704243510b6cee35a7b",
    "author": "Aleksey Yeschenko",
    "time": "6/30/15 9:04 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData extracted from public readSchemaFromSystemTables() : Collection in class org.apache.cassandra.schema.LegacySchemaTables",
        "comment": "createKeyspaceFromSchemaPartitions exists in both revisions",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 8203
}, {
    "id": 1133240,
    "repository": "https://github.com/google/truth.git",
    "sha1": "200f1577d238a6d3fbcf99cb2a2585b2071214a6",
    "url": "https://github.com/google/truth/commit/200f1577d238a6d3fbcf99cb2a2585b2071214a6",
    "author": "kak",
    "time": "7/6/15 1:54 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public isOrdered(comparator Comparator<? super T>) : void extracted from public isPartiallyOrdered(comparator Comparator<? super T>) : void in class com.google.common.truth.IterableSubject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isOrdered() : void extracted from public isPartiallyOrdered() : void in class com.google.common.truth.IterableSubject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrderedWithComparatorFailure() : void renamed to public listIsOrderedWithComparatorFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isPartiallyOrderedFailure() : void renamed to public isOrderedFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isPartiallyOrderedWithNonComparableElementsFailure() : void renamed to public isOrderedWithNonComparableElementsFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrdered() : void renamed to public listIsOrdered() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrderedWithComparator() : void renamed to public listIsOrderedWithComparator() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 405
}, {
    "id": 1133761,
    "repository": "https://github.com/spring-projects/spring-data-jpa.git",
    "sha1": "36d1b0717bc5836bba39985caadc2df5f2533ac4",
    "url": "https://github.com/spring-projects/spring-data-jpa/commit/36d1b0717bc5836bba39985caadc2df5f2533ac4",
    "author": "Dev Naruka",
    "time": "7/7/15 9:13 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor.PropertyChangeEnsuringBeanWrapper moved to org.springframework.data.jpa.repository.augment.PropertyChangeEnsuringBeanWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1133977,
    "repository": "https://github.com/cucumber/cucumber-jvm.git",
    "sha1": "0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
    "url": "https://github.com/cucumber/cucumber-jvm/commit/0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
    "author": "Aslak Hellesøy",
    "time": "7/6/15 7:36 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class cucumber.runtime.java.ObjectFactory moved to cucumber.api.java.ObjectFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public loadObjectFactory(classFinder ClassFinder) : ObjectFactory from class cucumber.runtime.java.JavaBackend to public loadObjectFactory(classFinder ClassFinder, objectFactoryClassName String) : ObjectFactory from class cucumber.runtime.java.ObjectFactoryLoader",
        "comment": "<p>Though the body does not totally match, their call graphs match.</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.JavaBackend to private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.ObjectFactoryLoader",
        "comment": "<p>Methods are both private =&gt; no call graph outside the class, but their bodies match</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1134191,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "ba1da95200d080aef6251f13ced0ca67dff282be",
    "url": "https://github.com/gradle/gradle/commit/ba1da95200d080aef6251f13ced0ca67dff282be",
    "author": "Rene Groeschke",
    "time": "7/6/15 7:43 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.gradle.tooling.tests.TestExecutionException moved to org.gradle.tooling.test.TestExecutionException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4581
}, {
    "id": 1136002,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
    "url": "https://github.com/apache/hive/commit/b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
    "author": "Sergey Shelukhin",
    "time": "7/7/15 10:30 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private doFirstFetchIfNeeded() : void extracted from private joinFinalLeftData() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private doFirstFetchIfNeeded() : void extracted from public process(row Object, tag int) : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4288
}, {
    "id": 1136184,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
    "url": "https://github.com/JetBrains/intellij-community/commit/ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
    "author": "Vassiliy.Kudryashov",
    "time": "7/8/15 5:41 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private getLiveIndicator(base Icon) : Icon from class com.intellij.execution.ui.RunContentManagerImpl to public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getConfiguration(project Project) : RunnerAndConfigurationSettings renamed to private getSelectedConfiguration(project Project) : RunnerAndConfigurationSettings in class com.intellij.execution.ExecutorRegistryImpl.ExecutorAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 22095
}, {
    "id": 1136374,
    "repository": "https://github.com/novoda/android-demos.git",
    "sha1": "5cdabae35f0642e9fe243afe12e4c16b3378a150",
    "url": "https://github.com/novoda/android-demos/commit/5cdabae35f0642e9fe243afe12e4c16b3378a150",
    "author": "Friedger Müffke",
    "time": "7/9/15 10:00 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.novoda.Base64DecoderException moved to com.novoda.demo.encryption.Base64DecoderException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.novoda.Base64 moved to com.novoda.demo.encryption.Base64",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.novoda.Encrypt renamed to com.novoda.demo.encryption.EncryptionActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private updateTextViews() : void extracted from public onCreate(savedInstanceState Bundle) : void in class com.novoda.Encrypt",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1136737,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "a07cae0aca9f9072256b3a5fd05779e8d69b9748",
    "url": "https://github.com/checkstyle/checkstyle/commit/a07cae0aca9f9072256b3a5fd05779e8d69b9748",
    "author": "Baratali Izmailov",
    "time": "7/8/15 10:27 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private leaveLiteralIf(literalIf DetailAST) : void inlined to public leaveToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private visitLiteralTry(literalTry DetailAST) : void inlined to public visitToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private leaveLiteralTry() : void inlined to public leaveToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private visitLiteralIf(literalIf DetailAST) : void inlined to public visitToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1138
}, {
    "id": 1137311,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "e1625136ba12907696ef4c6e922ce073293f3a2c",
    "url": "https://github.com/JetBrains/intellij-community/commit/e1625136ba12907696ef4c6e922ce073293f3a2c",
    "author": "Vladislav.Soroka",
    "time": "7/10/15 10:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void extracted from private getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig Element) : Map<String,String> in class org.jetbrains.idea.maven.project.MavenProject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15481
}, {
    "id": 1137397,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "url": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "author": "Marko Topolnik",
    "time": "7/10/15 5:19 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.SafeBuffer to class com.hazelcast.nio.Bits",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.UnsafeBuffer to class com.hazelcast.nio.Bits",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap moved to com.hazelcast.util.collection.Int2ObjectHashMap",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.protocol.Int2ObjectHashMapTest moved to com.hazelcast.util.collection.Int2ObjectHashMapTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap.Supplier moved to com.hazelcast.util.function.Supplier",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getOrDefault(key int, supplier Supplier) : V renamed to public computeIfAbsent(key int, mappingFunction IntFunction) : V in class com.hazelcast.util.collection.Int2ObjectHashMap",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1599
}, {
    "id": 1138932,
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "sha1": "2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "url": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "author": "QuantumBadger",
    "time": "7/11/15 11:33 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public UI_THREAD_HANDLER : Handler from class org.quantumbadger.redreader.common.General to class org.quantumbadger.redreader.common.AndroidApi",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1114
}, {
    "id": 1139092,
    "repository": "https://github.com/github/android.git",
    "sha1": "a7401e5091c06c68fae499ea1972b40143c66fa9",
    "url": "https://github.com/github/android/commit/a7401e5091c06c68fae499ea1972b40143c66fa9",
    "author": "Henrik",
    "time": "7/11/15 9:20 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private onUserLoggedIn(uri Uri) : void extracted from protected onNewIntent(intent Intent) : void in class com.github.mobile.accounts.LoginActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private endAccess(accessToken String, scope String) : void renamed to private endAuth(accessToken String, scope String) : void in class com.github.mobile.accounts.LoginActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 539
}, {
    "id": 1139304,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "author": "jyt109",
    "time": "7/11/15 11:47 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter extracted from public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter in class org.deeplearning4j.translate.CaffeModelToJavaClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1804
}, {
    "id": 1139791,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "84937551787072a4befac29fb48436b3187ac4c6",
    "url": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "author": "Andy Wilkinson",
    "time": "7/14/15 8:30 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private setField(clazz Class, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private setField(clazz Class, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createProxySelector(proxies List) : ProxySelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createProxySelector(decryptedSettings SettingsDecryptionResult) : ProxySelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createAuthenticationSelector(servers List) : AuthenticationSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createAuthenticationSelector(decryptedSettings SettingsDecryptionResult) : AuthenticationSelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "target class did not exust in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public readSettings() : MavenSettings extracted from public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void in class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-en'>MavenSettingsReader</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private homeDir : String from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2343
}, {
    "id": 1139897,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "af618666043f21b3db7e6a1be2aa225ae0f432b4",
    "url": "https://github.com/JetBrains/intellij-community/commit/af618666043f21b3db7e6a1be2aa225ae0f432b4",
    "author": "peter",
    "time": "7/14/15 6:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private isNavigationBlocked(renderer GutterIconRenderer, project Project) : boolean extracted from public mouseReleased(e MouseEvent) : void in class com.intellij.openapi.editor.impl.EditorGutterComponentImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 18405
}, {
    "id": 1139995,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "url": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "author": "Rob Winch",
    "time": "7/14/15 12:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource extracted from public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource in class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6646
}, {
    "id": 1140032,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "url": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "author": "Mikhaylo Demianenko",
    "time": "7/13/15 8:59 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenClosingTheDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenRotatingLog() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setup() : void renamed to public setUp() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public teardown() : void renamed to public tearDown() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 6884
}, {
    "id": 1140131,
    "repository": "https://github.com/Netflix/feign.git",
    "sha1": "b2b4085348de32f10903970dded99fdf0376a43c",
    "url": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "author": "Adrian Cole",
    "time": "7/13/15 1:49 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.BaseContract",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.Default",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public configKey(targetType Class, method Method) : String extracted from public configKey(method Method) : String in class feign.Feign",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public toKeyMethodFormatsAsExpected() : void renamed to public configKeyFormatsAsExpected() : void in class feign.FeignTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.jaxrs.JAXRSContract",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.Contract.Default",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to private headersFromAnnotation(targetType Class, data MethodMetadata) : void in class feign.Contract.Default",
        "comment": "headersFromAnnotation is extraced",
        "validation": "FP ",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customExpander() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public slashAreEncodedWhenNeeded() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public tooManyBodies() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyWithoutParameters() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headersOnMethodAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headersOnTypeAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public withPathAndURIParam() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyWithTemplate() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesAddsAcceptHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesAddsContentTypeHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public tooManyBodies() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyPathOnType() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyPathParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathParamWithSpaces() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public regexPathOnMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public withPathAndURIParams() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyQueryParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyFormParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyHeaderParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithoutSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithSomeSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithSomeOtherSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public classWithRootPathParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public classPathWithTrailingSlashParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private parsePathOnTypeMethod(name String) : MethodMetadata inlined to public parsePathMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 617
}, {
    "id": 1140981,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "url": "https://github.com/JetBrains/intellij-community/commit/a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "author": "Anton Makeev",
    "time": "7/14/15 4:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean, resolveSymlinksIfNecessary boolean) : String extracted from private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean) : String in class com.intellij.openapi.util.io.FileUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 17762
}, {
    "id": 1141018,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "106d1d51754f454fa673976665e41f463316e084",
    "url": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "author": "Roman Shevchenko",
    "time": "7/14/15 10:55 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isKeywordAny(builder PsiBuilder) : boolean extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 18156
}, {
    "id": 1141077,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "url": "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "author": "Rob Winch",
    "time": "7/14/15 4:49 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": "<p>Extract and Move to parent class</p><p>Extract and Move to class <span class='blob-code-inner'><span class='pl-en'>OnCommittedResponseWrapper (superType of&nbsp; SaveContextOnUpdateOrErrorResponseWrapper)<br /></span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "new---",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4803
}, {
    "id": 1141078,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "url": "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "author": "Rob Winch",
    "time": "7/14/15 4:48 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": "<p>Extract and Move to the inner class</p><p>Extract and move to super class actually</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 764
}, {
    "id": 1141203,
    "repository": "https://github.com/zeromq/jeromq.git",
    "sha1": "02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
    "url": "https://github.com/zeromq/jeromq/commit/02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
    "author": "Min(Dongmin Yu)",
    "time": "7/14/15 4:59 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private makeFdPair() : void inlined to public Signaler() in class zmq.Signaler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1141296,
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "sha1": "3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "url": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "author": "Chris Newland",
    "time": "7/14/15 7:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private visitTagParse(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private visitTagEliminateAllocation(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private visitTagEliminateLock(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 686
}, {
    "id": 1141324,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "url": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "author": "Shenwei Liu",
    "time": "7/14/15 9:46 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void extracted from private createSymLinkIosSdks(root Path, version String) : void in class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public simulatorPlatformSetsLinkerFlags() : void renamed to public iphoneOSSimulatorPlatformSetsLinkerFlags() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public appleSdkPathsBuiltFromDirectory() : void renamed to public iphoneOSSdkPathsBuiltFromDirectory() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2947
}, {
    "id": 1141343,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "url": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "author": "Shenwei Liu",
    "time": "7/14/15 12:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void extracted from private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void in class com.facebook.buck.apple.ProjectGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getDestination(targetNode TargetNode<?>) : Optional<PBXCopyFilesBuildPhase.Destination> renamed to private getDestinationSpec(targetNode TargetNode<?>) : Optional<CopyFilePhaseDestinationSpec> in class com.facebook.buck.apple.ProjectGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4819
}, {
    "id": 1142210,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "url": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "author": "Anton Makeev",
    "time": "7/16/15 8:31 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase to public createMainModule(project Project) : Module from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setUpProject(project Project) : ProjectInfo extracted from private initProject(descriptor LightProjectDescriptor) : void in class com.intellij.testFramework.LightPlatformTestCase",
        "comment": "<p>It is extracted and move to class <span class='blob-code-inner'><span class='pl-en'>LightProjectDescriptor. </span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Since RefDiff does not detect <br /></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": "new",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": "new",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 15903
}, {
    "id": 1142230,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
    "url": "https://github.com/JetBrains/intellij-community/commit/e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
    "author": "Nikolay Mikhaylov",
    "time": "7/15/15 4:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public resolveAndDownloadImpl(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : List<OrderRoot> extracted from public resolveAndDownload(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : NewLibraryConfiguration in class org.jetbrains.idea.maven.utils.library.RepositoryAttachHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15709
}, {
    "id": 1142429,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "author": "Alex Black",
    "time": "7/16/15 7:46 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getOptimizer(oa OptimizationAlgorithm, conf NeuralNetConfiguration, m Model) : ConvexOptimizer extracted from public testSphereFnOptHelper(oa OptimizationAlgorithm, numLineSearchIter int, nDimensions int) : void in class org.deeplearning4j.optimize.solver.TestOptimizers",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1046
}, {
    "id": 1142921,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "url": "https://github.com/datastax/java-driver/commit/14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "author": "olim7t",
    "time": "7/17/15 6:52 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private validateParameters() : void extracted from public prepare(manager MappingManager, ps PreparedStatement) : void in class com.datastax.driver.mapping.MethodMapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package should_include_enumtype_in_accessor_string() : void renamed to public should_allow_enum_as_string_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package should_include_enumtype_in_accessor_ordinal() : void renamed to public should_allow_enum_as_int_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1143000,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
    "url": "https://github.com/JetBrains/intellij-community/commit/97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
    "author": "Eugene Zhuravlev",
    "time": "7/16/15 12:00 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.jetbrains.jps.cmdline.BuildMain.MyLoggerFactory moved to org.jetbrains.jps.cmdline.LogSetup.MyLoggerFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private initLoggers() : void from class org.jetbrains.jps.cmdline.BuildMain to public initLoggers() : void from class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureLogConfigExists(logConfig File) : void from class org.jetbrains.jps.cmdline.BuildMain to private ensureLogConfigExists(logConfig File) : void from class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_CONFIG_FILE_NAME : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_FILE_MACRO : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_FILE_NAME : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private DEFAULT_LOGGER_CONFIG : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 15639
}, {
    "id": 1143517,
    "repository": "https://github.com/BuildCraft/BuildCraft.git",
    "sha1": "a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
    "url": "https://github.com/BuildCraft/BuildCraft/commit/a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
    "author": "Hea3veN",
    "time": "7/17/15 8:32 AM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute public index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute public side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getAvailableRequests(station DockingStation) : Collection<StackRequest> extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private releaseCurrentRequest() : void extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.boards.BoardRobotDelivery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(i int, stack ItemStack) : ItemStack in class buildcraft.robotics.TileRequester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(slot int, stack ItemStack) : ItemStack in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.robotics.TileRequester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(slot int) : ItemStack in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public setStation(station DockingStation) : void extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": "<p>Extract and Move to the inner class</p><p>This is extract to other class indeed</p><p>There is one statement (setting&nbsp;<span class='blob-code-inner'>station) which is now being extracted as a setter. The setter does other stuff as well.</span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public station : DockingStation from class buildcraft.api.robots.StackRequest to class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": "<p>new</p><p>DockingStation still exists, it has been moved apparently. It still has statation</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2449
}, {
    "id": 1143739,
    "repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
    "sha1": "334dbc7cf3432e7c17b0ed98801e61b0b591b408",
    "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/334dbc7cf3432e7c17b0ed98801e61b0b591b408",
    "author": "Matthew Wigginton Conway",
    "time": "7/16/15 11:10 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.cluster.AnalystWorker.WorkerIdDefiner moved to org.opentripplanner.analyst.cluster.WorkerIdDefiner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getPropertyValue() : String from class org.opentripplanner.analyst.cluster.AnalystWorker.WorkerIdDefiner to public getPropertyValue() : String from class org.opentripplanner.analyst.cluster.WorkerIdDefiner",
        "comment": "<p>added</p><p>Since the abstract refactoring (<a href='../../commit-refactorings/1143739'>move class</a>) is detected, this is FP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1145557,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "url": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "author": "Grzegorz Grzybek",
    "time": "7/20/15 9:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageDataFormatMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageLanguageMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5459
}, {
    "id": 1146371,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7dd55014f9840ce03867bb175cf37a4c151dc806",
    "url": "https://github.com/JetBrains/intellij-community/commit/7dd55014f9840ce03867bb175cf37a4c151dc806",
    "author": "Sergey Malenkov",
    "time": "7/24/15 1:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createConfigurable(ep ConfigurableEP<T>, log boolean) : T extracted from public wrapConfigurable(ep ConfigurableEP<T>) : T in class com.intellij.openapi.options.ex.ConfigurableWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16147
}, {
    "id": 1146445,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "9fbf6b852bd9766060307aff960fb597d55e24d3",
    "url": "https://github.com/JetBrains/intellij-community/commit/9fbf6b852bd9766060307aff960fb597d55e24d3",
    "author": "Maxim.Mossienko",
    "time": "7/23/15 8:06 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public clear() : void extracted from public close() : void in class com.intellij.util.io.CachingEnumerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 17250
}, {
    "id": 1146490,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
    "url": "https://github.com/JetBrains/intellij-community/commit/6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
    "author": "Nikolay Mikhaylov",
    "time": "7/23/15 3:21 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private doCustomizeComponents() : void extracted from public execute() : MavenServerExecutionResult in class org.jetbrains.idea.maven.server.MavenEmbedderWrapper$4",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 18395
}, {
    "id": 1146679,
    "repository": "https://github.com/JetBrains/intellij-plugins.git",
    "sha1": "0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
    "url": "https://github.com/JetBrains/intellij-plugins/commit/0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
    "author": "Konstantin Shcheglov",
    "time": "7/24/15 1:06 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public findPsiFile(project Project, path String) : PsiFile extracted from private getElementForNavigationTarget(project Project, target PluginNavigationTarget) : PsiElement in class com.jetbrains.lang.dart.resolve.DartResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1957
}, {
    "id": 1147192,
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "sha1": "b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "url": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "author": "weicheng113",
    "time": "7/24/15 8:26 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.robobinding.codegen.presentationmodel.nestedIPMexample to org.robobinding.codegen.presentationmodel.nestedIPM",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private removeItemPresentationModelFactoryMethod(dataSetProperties Collection<DataSetPropertyInfoImpl>) : void extracted from private processDataSetProperties() : void in class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.Item moved to org.robobinding.codegen.presentationmodel.nestedIPM.Item",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.ItemPresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.ItemPresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.PresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.PresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.SubItemPresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.SubItemPresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename pacakge</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.SubItem moved to org.robobinding.codegen.presentationmodel.nestedIPM.SubItem",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1148572,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "url": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "author": "Paulo Motta",
    "time": "7/22/15 12:11 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private listSnapshots() : List<File> extracted from public getSnapshotDetails() : Map<String,Pair<Long,Long>> in class org.apache.cassandra.db.Directories",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3298
}, {
    "id": 1148642,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "681dc6346ce3cf5be5c5985faad120a18949cee0",
    "url": "https://github.com/gradle/gradle/commit/681dc6346ce3cf5be5c5985faad120a18949cee0",
    "author": "Darrell DeBoer",
    "time": "7/23/15 5:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createPlatformToolProvider(targetPlatform NativePlatformInternal) : PlatformToolProvider extracted from public select(targetPlatform NativePlatformInternal) : PlatformToolProvider in class org.gradle.nativeplatform.toolchain.internal.gcc.AbstractGccCompatibleToolChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5252
}, {
    "id": 1149551,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "92e98858e742bbb669ccbf790a71a618c581df21",
    "url": "https://github.com/apache/hive/commit/92e98858e742bbb669ccbf790a71a618c581df21",
    "author": "Alan Gates",
    "time": "7/24/15 2:43 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public use(ctx ParserRuleContext, sql String) : Integer extracted from public use(ctx HplsqlParser.Use_stmtContext) : Integer in class org.apache.hive.hplsql.Stmt",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6300
}, {
    "id": 1150432,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "c1359c843bd03a694f846c8140e24ed646bbb913",
    "url": "https://github.com/VoltDB/voltdb/commit/c1359c843bd03a694f846c8140e24ed646bbb913",
    "author": "Huzefa Hakimi",
    "time": "7/27/15 7:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testBasicCreateIndex() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testCreateDropIndexonView() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1150594,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "url": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "author": "Jaromir Hamala",
    "time": "7/27/15 10:56 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.RegexPredicate moved to com.hazelcast.query.impl.predicates.RegexPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.OrPredicate moved to com.hazelcast.query.impl.predicates.OrPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.EqualPredicate moved to com.hazelcast.query.impl.predicates.EqualPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.InstanceOfPredicate moved to com.hazelcast.query.impl.predicates.InstanceOfPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.NotPredicate moved to com.hazelcast.query.impl.predicates.NotPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.GreaterLessPredicate moved to com.hazelcast.query.impl.predicates.GreaterLessPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.AndPredicate moved to com.hazelcast.query.impl.predicates.AndPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.LikePredicate moved to com.hazelcast.query.impl.predicates.LikePredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.BetweenPredicate moved to com.hazelcast.query.impl.predicates.BetweenPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.InPredicate moved to com.hazelcast.query.impl.predicates.InPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.AbstractPredicate moved to com.hazelcast.query.impl.predicates.AbstractPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.NotEqualPredicate moved to com.hazelcast.query.impl.predicates.NotEqualPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.ILikePredicate moved to com.hazelcast.query.impl.predicates.ILikePredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private readAttribute(entry Map.Entry, attribute String) : Comparable from class com.hazelcast.query.Predicates to package readAttribute(entry Map.Entry, attribute String) : Comparable from class com.hazelcast.query.impl.predicates.AttributeUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 3556
}, {
    "id": 1151129,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "url": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "author": "lgong",
    "time": "7/27/15 8:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoResolvedType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.TemplatizedType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.PrototypeObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.ProxyObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumElementType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnknownType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package isSubtype(typeA ObjectType, typeB RecordType, implicitImplCache ImplCache) : boolean extracted from package isSubtype(typeA ObjectType, typeB RecordType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(other JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(other JSType) : boolean in class com.google.javascript.rhino.jstype.ArrowType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected implicitMatch(rightType JSType, leftType JSType, implicitImplCache ImplCache) : boolean extracted from package isSubtypeHelper(thisType JSType, thatType JSType) : boolean in class com.google.javascript.rhino.jstype.JSType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public usesImplicitMatch() : boolean renamed to public isStructuralInterface() : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3978
}, {
    "id": 1151664,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "url": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "author": "As?m Arslan",
    "time": "7/28/15 5:19 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public DATA_FULL_NAME : String from class com.hazelcast.client.protocol.generator.CodecModel to class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCodecModel(methodElement ExecutableElement, lang Lang) : CodecModel extracted from public generateCodec(methodElement ExecutableElement, lang Lang) : void in class com.hazelcast.client.protocol.generator.CodecCodeGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodecModel.ParameterModel to public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getKeyTypeInsideMap(type String) : String renamed to public getFirstGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getTypeInsideCollection(type String) : String renamed to public getGenericType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getTypeInsideData(type String) : String renamed to public getArrayType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getValueTypeInsideMap(type String) : String renamed to public getSecondGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public calculateStringDataSize(string String) : int renamed to public calculateDataSize(string String) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public calculateByteArrayDataSize(bytes byte[]) : int renamed to public calculateDataSize(bytes byte[]) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1902
}, {
    "id": 1151667,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "204bf49cba03fe5d581a35ff82dd22587a681f46",
    "url": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "author": "Mehmet Dogan",
    "time": "7/28/15 4:32 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createConfig() : Config extracted from private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createConfig() : Config extracted from private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterSlave(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterMaster(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTcpIp__ClusterMerge() : void renamed to public testTcpIp_ClusterMerge() : void in class com.hazelcast.cluster.SplitBrainHandlerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private isJoinRequestFromAnExistingMember(joinRequest JoinRequest, connection Connection) : boolean renamed to private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package sendSplitBrainJoinMessage(target Address) : JoinMessage extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner & moved to class com.hazelcast.cluster.impl.AbstractJoiner",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getMemberAddresses() : Collection extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner",
        "comment": "<p>Extract and Move to the inner class</p><p>This would be Extract and Move. The called method is not doing the same thing as the original code though</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public onHeartbeat(member MemberImpl) : void extracted from public connectionAdded(connection Connection) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createJoinRequest() : JoinRequest inlined to public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.MulticastJoiner",
        "comment": "<p>1) The inlined method is in another class</p><p>2) It has not been deleted from the original class</p><p>3) The method is still calling the method being reported as inlined, with one extra param</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 3496
}, {
    "id": 1153354,
    "repository": "https://github.com/restlet/restlet-framework-java.git",
    "sha1": "7ffe37983e2f09637b0c84d526a2f824de652de4",
    "url": "https://github.com/restlet/restlet-framework-java/commit/7ffe37983e2f09637b0c84d526a2f824de652de4",
    "author": "Hugo Wood",
    "time": "7/30/15 10:40 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fillRepresentation(model Model, name String, contract Contract) : void extracted from private fillRepresentations(swagger Swagger, contract Contract) : void in class org.restlet.ext.apispark.internal.conversion.swagger.v2_0.Swagger2Reader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1153913,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
    "url": "https://github.com/JetBrains/intellij-community/commit/2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
    "author": "Max Medvedev",
    "time": "7/30/15 10:53 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.jetbrains.plugins.groovy.util.ResolveProfiler moved to com.intellij.util.profiling.ResolveProfiler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jetbrains.plugins.groovy.util.ResolveProfiler.ThreadInfo moved to com.intellij.util.profiling.ResolveProfiler.ThreadInfo",
        "comment": "<p>The whole container class has been moved&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public finish() : long from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public finish() : long from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private getThreadInfo() : ThreadInfo from class org.jetbrains.plugins.groovy.util.ResolveProfiler to private getThreadInfo() : ThreadInfo from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public start() : void from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public start() : void from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(s String) : void from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public write(s String) : void from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private DISABLED : boolean from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private PATH : String from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private fileCount : int from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private threadMap : ThreadLocal from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 35144
}, {
    "id": 1155076,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "url": "https://github.com/facebook/buck/commit/6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "author": "Martin Kosiba",
    "time": "7/31/15 3:01 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package getEnumerator(rType RType) : ResourceIdEnumerator extracted from public addIntResourceIfNotPresent(rType RType, name String) : void in class com.facebook.buck.android.aapt.AaptResourceCollector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2288
}, {
    "id": 1155159,
    "repository": "https://github.com/bitfireAT/davdroid.git",
    "sha1": "5b7947034a656c463ca477e198f7728cccc9e4c1",
    "url": "https://github.com/bitfireAT/davdroid/commit/5b7947034a656c463ca477e198f7728cccc9e4c1",
    "author": "Ricki Hirner",
    "time": "8/1/15 8:25 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method package recurrenceSetsToAndroidString(dates List<? extends DateListProperty>) : String from class at.bitfire.davdroid.resource.LocalCalendar to public recurrenceSetsToAndroidString(dates List<? extends DateListProperty>, allDay boolean) : String from class at.bitfire.davdroid.DateUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1156431,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "url": "https://github.com/apache/cassandra/commit/1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "author": "Marcus Eriksson",
    "time": "8/4/15 4:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public minorWasTriggered(keyspace String, cf String) : boolean extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public minorWasTriggered(keyspace String, cf String) : boolean in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": "<p>testTriggerMinorCompaction might be renamed to&nbsp;testTriggerMinorCompactionSTCS (or other similar methods in the new code) but the overlapping part in&nbsp;testTriggerMinorCompaction and&nbsp;testTriggerMinorCompaction looks more like an extract method.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public testTriggerMinorCompactionSTCSAlterTable() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": "<p>new</p><p>This is more or less similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1156431/3846</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getCurrentColumnFamilyStore() : ColumnFamilyStore extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3975
}, {
    "id": 1156853,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
    "url": "https://github.com/JetBrains/intellij-community/commit/6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
    "author": "Sergey Savenko",
    "time": "8/4/15 8:47 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.execution.console.RunIdeConsoleAction.IDE moved to com.intellij.ide.script.IDE",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 38937
}, {
    "id": 1157522,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "url": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "author": "Janario Oliveira",
    "time": "8/4/15 11:50 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.FirstLetterType moved to org.hibernate.test.annotations.enumerated.custom_types.FirstLetterType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.LastNumberType moved to org.hibernate.test.annotations.enumerated.custom_types.LastNumberType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.Common moved to org.hibernate.test.annotations.enumerated.enums.Common",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.Trimmed moved to org.hibernate.test.annotations.enumerated.enums.Trimmed",
        "comment": "<p>The Enum has been moved from inside a class into a separate .java file. There are similar cases in the same refactoring</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.FirstLetter moved to org.hibernate.test.annotations.enumerated.enums.FirstLetter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.LastNumber moved to org.hibernate.test.annotations.enumerated.enums.LastNumber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 4528
}, {
    "id": 1157971,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "153611deab149accd8aeaf03fd102c0b069bd322",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/153611deab149accd8aeaf03fd102c0b069bd322",
    "author": "Roman Birg",
    "time": "8/5/15 9:45 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public of(cells Cell[][], row int, column int, size byte) : Cell extracted from public of(row int, column int, size byte) : Cell in class com.android.internal.widget.LockPatternView.Cell",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public stringToPattern(string String, size byte) : List<LockPatternView.Cell> extracted from public stringToPattern(string String) : List<LockPatternView.Cell> in class com.android.internal.widget.LockPatternUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 12918
}, {
    "id": 1158716,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "44aab6242f8c93059612c953af950eb1870e0774",
    "url": "https://github.com/gradle/gradle/commit/44aab6242f8c93059612c953af950eb1870e0774",
    "author": "Adrian Kelly",
    "time": "8/5/15 1:14 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.gradle.internal.file.RelativeFilePathResolver from class org.gradle.api.internal.file.FileResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5181
}, {
    "id": 1159151,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "e0072aac53b3b88de787e7ca653c7e17f9499018",
    "url": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "author": "Nigel Small",
    "time": "8/5/15 12:32 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public unpackUtf8() : byte[] renamed to public unpackTextHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": "<p>Matin: the bodies are so similar but there is a method with the same name in the target revision. Also wherever&nbsp;it has been called is calling the method with the same name. FP</p><p>Davood: It seems that unpackTextHeader&nbsp;is extracted from unpackUTF8 rather than being renamed, because&nbsp;unpackUTF8 exists before and after</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private packRawMap(map Map) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public packRawMap(map Map) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private unpackRawMap() : Map from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackRawMap() : Map from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private unpackProperties() : Map from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackProperties() : Map from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
        "comment": "<p>Move to new class</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public NODE : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public PATH : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3709
}, {
    "id": 1159836,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "8398fbf3dd0937a0a4a3d540977a95f97425f566",
    "url": "https://github.com/apache/hive/commit/8398fbf3dd0937a0a4a3d540977a95f97425f566",
    "author": "Jimmy Xiang",
    "time": "8/6/15 1:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public closeSparkSession() : void extracted from public close() : void in class org.apache.hadoop.hive.ql.session.SessionState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5541
}]